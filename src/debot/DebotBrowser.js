import store from 'src/store';
import tonClient from 'src/tonClient';
import { DEBOT_WC } from 'src/constants';
import { setSigningBox } from 'src/store/actions/debot';
import InterfacesController from './interfaces';

class DebotBrowser {
	constructor() {
		this.debot_handle = null;
		this.debot_abi = null;
		this.info = null;
	}

	setDebotParams(params) {
		const { debot_handle, debot_abi, info } = params;

		this.debot_handle = debot_handle;
		this.debot_abi = debot_abi;
		this.info = info;
	}

	log(loggerParams) {
		const browserParams = {
			debot_handle: this.debot_handle,
			debot_abi: this.debot_abi,
			info: this.info,
		};
		console.log(browserParams, loggerParams);
	};

	switch(params) {
		console.log(params)
	};

	switch_completed() {
		console.log({ msg: 'Switch completed' })
	};

	show_action(params) {
		console.log(params)
	};

	input(params) {
		console.log(params)
	};

	async get_signing_box() {
		const keysPromise = new Promise((resolve) => {
			store.dispatch(setSigningBox({
				submit: resolve,
			}));
		});

		const keys = await keysPromise;

		const { handle } = await tonClient.crypto.get_signing_box(keys);

		store.dispatch(setSigningBox(null));

		return { signing_box: handle };
	};

	invoke_debot(params) {
		console.log(params)
	};

	async send(params) {
		const parsedMessage = await tonClient.boc.parse_message({ boc: params.message })

		const { dst, src, dst_workchain_id } = parsedMessage.parsed;
		const [, interfaceId] = dst.split(':');

		if (dst_workchain_id === DEBOT_WC) {
			InterfacesController.delegateToInterface(interfaceId, {
				debotAddress: src,
				...params,
			});
		} else {
			console.log('call other debot', parsedMessage, params);
			// call other debot
		}
	};

	approve(params) {
		console.log(params)
		// {
		// 	activity: {
		// 		activity:
		// 		dst: "0:d17e6cd2b2d1d6a8fe2f72559dc20f416ed9fc0e8520f4250b848f5c7e73cc61"
		// 		fee: 72535001
		// 		msg: ""
		// 		out: []
		// 		setcode: false
		// 		signkey: "9711a04f0b19474272bc7bae5472a8fbbb6ef71ce9c193f5ec3f5af808069a41"
		// 		type: "Transaction"
		// 		__proto__: Object
		// 	},
		// 	type: "Approve",
		// }
	};
}

export default DebotBrowser;