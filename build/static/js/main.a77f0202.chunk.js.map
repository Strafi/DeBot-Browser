{"version":3,"sources":["constants/index.js","helpers/decodeString.js","store/actions/account.js","store/actions/debot.js","helpers/addLocalDebot.js","store/actions/environment.js","helpers/addEnvVariable.js","helpers/encodeString.js","helpers/createDebotUrl.js","helpers/createExplorerUrl.js","tonClient.js","helpers/checkIsValidAddress.js","helpers/formDebotFunctionFromId.js","helpers/generateRandomColor.js","helpers/genKeyPairFromMnemonic.js","helpers/getEnvVariableFromInput.js","helpers/removeLocalDebot.js","helpers/removeEnvVariable.js","helpers/isCustomScrollBar.js","helpers/hooks/useSearchParams.js","helpers/hooks/useDebotAddress.js","store/reducers/account.js","store/reducers/debot.js","store/reducers/environment.js","store/reducers/index.js","store/index.js","components/App/index.js","components/icons/LensIcon.js","components/icons/ArrowIcon.js","components/icons/BackIcon.js","components/icons/CancelIcon.js","components/icons/DevNetIcon.js","components/icons/MainNetIcon.js","debot/ABIs/terminal.abi.js","debot/ABIs/menu.abi.js","debot/ABIs/amount_input.abi.js","debot/ABIs/confirm_input.abi.js","debot/ABIs/address_input.abi.js","debot/ABIs/number_input.abi.js","debot/ABIs/echo.abi.js","debot/ABIs/stdout.abi.js","debot/ABIs/userinfo.abi.js","debot/interfaces/terminal.js","debot/interfaces/menu.js","debot/interfaces/amount_input.js","debot/interfaces/confirm_input.js","debot/interfaces/address_input.js","debot/interfaces/number_input.js","debot/interfaces/echo.js","debot/interfaces/stdout.js","debot/interfaces/userinfo.js","debot/interfaces/index.js","debot/DebotBrowser.js","debot/DEngine.js","components/AddAccount/index.js","components/SearchBar/index.js","components/Header/index.js","components/DebotsList/ListItem.js","components/DebotsList/index.js","components/DebotPage/Stage/StageComponents/Text/index.js","components/DebotPage/Stage/StageComponents/Input/index.js","components/DebotPage/Stage/StageComponents/Textarea/index.js","components/DebotPage/Stage/StageComponents/AmountInput/index.js","components/DebotPage/Stage/StageComponents/ConfirmInput/index.js","components/DebotPage/Stage/StageComponents/AddressInput/index.js","components/DebotPage/Stage/StageComponents/TokensInput/index.js","components/DebotPage/Stage/StageComponents/Menu/index.js","components/DebotPage/Stage/StageComponents/Stdout/index.js","components/DebotPage/Stage/index.js","components/DebotPage/index.js","components/SigningBox/index.js","components/ApproveWindow/index.js","contexts/ControlWithPopupContext.js","components/AddDebot/index.js","components/Environment/index.js","components/ControlWithPopup/index.js","components/OptionsList/index.js","components/Loader/index.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","EXPLORER_BASE_URL","DB_CONTENT_TYPES","DEBOT","COMPONENTS_BINDINGS","TEXT","INPUT","TEXTAREA","AMOUNT_INPUT","CONFIRM_INPUT","ADDRESS_INPUT","TOKENS_INPUT","MENU","STDOUT","DEBOT_ADDRESS_SEARCH_PARAM","DEBOT_WC","MNEMONIC_WORD_COUNT","DERIVATION_PATH","USER_DEBOTS_LS_FIELD","USER_ENV_LS_FIELD","TON_NETWORK_LS_FIELD","ACCOUNTS_LIST_LS_FIELD","CHOSEN_ACCOUNT_LS_FIELD","MAIN_NETWORK","DEV_NETWORK","decodeString","encodedString","decodedString","Buffer","from","toString","console","log","ADD_ACCOUNT","SELECT_ACCOUNT","REMOVE_ACCOUNT","SET_ADD_ACCOUNT_MODAL","setAddAccountModal","payload","type","PUSH_ITEM_TO_STAGE","CLEAR_STAGE","SET_SIGNING_BOX","SET_APPROVE_WINDOW","SET_DEBOTS_FILTER_KEY","SET_LOCAL_DEBOTS_LIST","pushItemToStage","item","dispatch","clearStage","setSigningBox","signingBoxInfo","setApproveWindow","approveWindowInfo","setDebotsFilterKey","filterValue","setLocalDebotsList","debotsList","addLocalDebot","debotObj","localDebosFromLS","JSON","parse","localStorage","getItem","newLocalDebots","store","setItem","stringify","SET_ENVIRONMENT_VARIABLE","setEnvironmentVariables","variables","addEnvVariable","key","value","envFromLS","newEnv","encodeString","unescape","encodeURIComponent","split","map","char","charCodeAt","join","createDebotUrl","debotAddress","createExplorerUrl","addr","TonClient","useBinaryLibrary","libWeb","clientController","this","selectedNetwork","mainNetClient","network","server_address","devNetClient","address","a","tonClientController","client","utils","convert_address","output_format","result","checkIsValidAddress","formDebotFunctionFromId","id","parseInt","generateRandomColor","Math","floor","random","mnemonic","crypto","hdkey_xprv_from_mnemonic","dictionary","word_count","phrase","hdkMaster","hdkey_derive_from_xprv_path","xprv","path","hdkRoot","hdkey_secret_from_xprv","secret","nacl_sign_keypair_from_secret_key","keyPair","public","genKeyPairFromMnemonic","getEnvVariableFromInput","text","startsWith","varName","slice","getState","environment","removeLocalDebot","filter","debot","removeEnvVariable","isCustomScrollBar","navigator","platform","toLowerCase","includes","useSearchParams","URLSearchParams","useLocation","search","useDebotAddress","get","initialState","addAccountModal","chosenAccountAddress","accountsList","reducer","state","action","color","accountData","account","isDeletingActiveAccount","stage","signingBox","approveWindow","filterKey","title","localDebotsList","rootReducer","combineReducers","middleware","thunk","composedEnhancers","compose","applyMiddleware","createStore","App","isAccountModalVisible","useSelector","className","exact","component","DebotsList","DebotPage","LensIcon","onClick","width","height","viewBox","fill","xmlns","d","stroke","y1","x2","y2","transform","ArrowIcon","BackIcon","fillRule","CancelIcon","strokeWidth","strokeLinecap","strokeLinejoin","DevNetIcon","src","alt","MainNetIcon","TERMINAL_ABI","MENU_ABI","AMOUNT_INPUT_ABI","CONFIRM_INPUT_ABI","ADDRESS_INPUT_ABI","NUMBER_INPUT_ABI","ECHO_ABI","STDOUT_ABI","USERINFO_ABI","Terminal","abi","params","answerId","multiline","prompt","stageObject","functionId","interfaceAddress","config","min","decimals","message","decode_message","decodedMessage","extendedParams","name","inputStr","inputInt","inputTons","inputBoolean","print","Error","constructor","error","Menu","description","items","menuItems","handlerId","select","AmountInput","max","ConfirmInput","AddressInput","NumberInput","Echo","request","decodedRequest","response","DEngine","callDebotFunction","catch","err","isError","echo","Stdout","Userinfo","isPubkey","length","find","isVisible","_getAccountData","pubkey","getAccount","getPublicKey","interfacesController","terminal","menu","amountInput","confirmInput","addressInput","numberInput","stdout","userinfo","Map","interfaces","interfaceId","has","_interface","call","_","DebotBrowser","debot_handle","debot_abi","info","deprecatedMessageTimeout","interfacesQueue","shift","interfaceState","InterfacesController","delegateToInterface","clearTimeout","setTimeout","loggerParams","browserParams","msg","showDeprecatedMessage","keysPromise","Promise","resolve","submit","keys","get_signing_box","handle","signing_box","boc","parse_message","parsedMessage","parsed","dst","dst_workchain_id","push","storage","debotModule","send","initDebot","approvePromise","activity","approved","dEngine","mainDebotModule","DebotModule","devDebotModule","debotBrowser","init","initParams","setDebotParams","set","browser","checkAreInterfacesSupported","showUnsupportedMessage","start","input","debotParams","functionName","call_set","function_name","encode_internal_message","src_address","encodedMessage","sendRes","releaseInterfacesQueue","clearInterfacesQueue","runDebot","AddAccount","useDispatch","useState","setAddress","setPubkey","label","setLabel","isAddressError","setIsAddressError","isPubkeyError","setIsPubkeyError","isLabelError","setIsLabelError","isCalledFromDeBot","executeDebotFunction","closeModal","useEffect","handleAddAccount","e","preventDefault","isValidAddress","isValidLabel","isValidPubkey","hasErrors","onSubmit","placeholder","onChange","currentTarget","SearchBar","history","useHistory","inputValue","setInputValue","searchDebot","debotUrl","target","onKeyPress","event","shiftKey","altKey","Header","setSelectedNetwork","match","useRouteMatch","chosenAccount","handleSelectNetwork","handleSelectAccount","accountAddress","selectAccount","handleRemoveAccount","removeAccount","backButtonClassName","to","selectedItem","isDisabled","toUpperCase","stopPropagation","ListItem","isGrey","linkAddress","listItemClassName","filteredDebots","filteredLocalDebots","debotsListClassName","index","isFailed","Text","runDebotFunction","textClassName","Input","isMultiline","customCallback","customErrorText","setCustomErrorText","errorText","setErrorText","inputRef","useRef","current","focus","handleInputChange","handleSend","handleKeyPress","inputClassName","ref","autoComplete","Textarea","normalizeValue","power","numPower","parseFloat","pow","formStepFromDecimals","decimalsInt","resultString","i","inputConfig","step","formDescription","decimalsString","floatValue","isOutOfRange","approveCallback","handleConfirm","handleSubmit","TokensInput","nanotokens","menuItemsToRender","setMenuItemsToRender","isShowAllMenuItems","setIsShowAllMenuItems","handleSelectItem","useCallback","useLayoutEffect","itemsToRender","menuName","Stage","stageRef","createRef","stageComponents","formStageComponents","props","stageItem","Component","prevProps","scrollTop","scrollHeight","isDebotError","stageClassName","connect","setIsDebotError","isSigningBoxVisible","isApproveWindowVisible","isDebotSaved","asyncEffect","restartDebot","reloadDebot","pageClassName","prefilledAddress","SigningBox","isDropable","setIsDropable","isUploadError","setIsUploadError","submitInput","preventEvent","onDragEnter","onDrop","files","dataTransfer","reader","FileReader","onabort","onerror","onload","readAsText","onDragOver","hidden","htmlFor","onDragLeave","convertFromNano","ApproveWindow","fee","out","setcode","signkey","hasOutgoingTransfers","href","rel","spending","recipient","amount","isApproved","ControlWithPopupContext","React","createContext","AddDebot","popupContext","useContext","debotName","setDebotName","setDebotAddress","handleAddDebot","closePopup","handlePressOnEnter","document","addEventListener","removeEventListener","Environment","envVariables","envEntries","Object","entries","envKey","setEnvKey","envValue","setEnvValue","isCopiedVisible","setIsCopiedVisible","handleAddVariable","copyToClipboard","clipboard","writeText","copiedIndicatorClassName","handleRemoveVariable","ControlWithPopup","children","containerRef","isControlOpen","setIsControlOpen","handleClickOutside","contains","containerClassName","switcherBlockClassName","containerStyles","style","Provider","OptionsList","switcherBlockRef","isListOpen","setIsListOpen","listClassName","Loader","imgSrc","imgAlt","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","require","querySelector","classList","add","routerParams","process","REACT_APP_ROUTER_BASENAME","basename","ReactDOM","render","getElementById","URL","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.a77f0202.chunk.js","sourcesContent":["const DB_CONTENT_TYPES = {\n\tDEBOT: 'debot',\n}\n\nconst COMPONENTS_BINDINGS = {\n\tTEXT: 'Text',\n\tINPUT: 'Input',\n\tTEXTAREA: 'Textarea',\n\tAMOUNT_INPUT: 'AmountInput',\n\tCONFIRM_INPUT: 'ConfirmInput',\n\tADDRESS_INPUT: 'AddressInput',\n\tTOKENS_INPUT: 'TokensInput',\n\tMENU: 'Menu',\n\tSTDOUT: 'Stdout',\n}\n\nconst EXPLORER_BASE_URL = 'https://ton.live/accounts/accountDetails?id=';\n\nconst DEBOT_ADDRESS_SEARCH_PARAM = 'debotAddress';\n\nconst DEBOT_WC = -31;\nconst MNEMONIC_WORD_COUNT = 12;\nconst DERIVATION_PATH = \"m/44'/396'/0'/0/0\";\n\nconst USER_DEBOTS_LS_FIELD = 'USER_DEBOTS_LS_FIELD';\nconst USER_ENV_LS_FIELD = 'USER_ENV_LS_FIELD';\nconst TON_NETWORK_LS_FIELD = 'TON_NETWORK_LS_FIELD';\nconst ACCOUNTS_LIST_LS_FIELD = 'ACCOUNTS_LIST_LS_FIELD';\nconst CHOSEN_ACCOUNT_LS_FIELD = 'CHOSEN_ACCOUNT_LS_FIELD';\n\nconst MAIN_NETWORK = 'main.ton.dev';\nconst DEV_NETWORK = 'net.ton.dev';\n\nmodule.exports = {\n\tEXPLORER_BASE_URL,\n\tDB_CONTENT_TYPES,\n\tCOMPONENTS_BINDINGS,\n\tDEBOT_ADDRESS_SEARCH_PARAM,\n\tDEBOT_WC,\n\tMNEMONIC_WORD_COUNT,\n\tDERIVATION_PATH,\n\tUSER_DEBOTS_LS_FIELD,\n\tUSER_ENV_LS_FIELD,\n\tTON_NETWORK_LS_FIELD,\n\tACCOUNTS_LIST_LS_FIELD,\n\tCHOSEN_ACCOUNT_LS_FIELD,\n\tMAIN_NETWORK,\n\tDEV_NETWORK,\n}\n","function decodeString(encodedString) {\n\tif (typeof encodedString !== 'string')\n\t\treturn;\n\n\tconst decodedString = Buffer.from(encodedString, 'hex').toString();\n\n\tconsole.log(decodedString);\n\n\treturn decodedString;\n}\n\nexport default decodeString;\n","export const ADD_ACCOUNT = 'account/ADD_ACCOUNT';\nexport const SELECT_ACCOUNT = 'account/SELECT_ACCOUNT';\nexport const REMOVE_ACCOUNT = 'account/REMOVE_ACCOUNT';\nexport const SET_ADD_ACCOUNT_MODAL = 'account/SET_ADD_ACCOUNT_MODAL';\n\nexport const addAccount = payload => ({\n\ttype: ADD_ACCOUNT,\n\tpayload,\n})\n\nexport const selectAccount = accountAddress => ({\n\ttype: SELECT_ACCOUNT,\n\tpayload: accountAddress,\n})\n\nexport const removeAccount = accountAddress => ({\n\ttype: REMOVE_ACCOUNT,\n\tpayload: accountAddress,\n})\n\nexport const setAddAccountModal = payload => ({\n\ttype: SET_ADD_ACCOUNT_MODAL,\n\tpayload,\n})\n","export const PUSH_ITEM_TO_STAGE = 'debot/PUSH_ITEM_TO_STAGE';\nexport const CLEAR_STAGE = 'debot/CLEAR_STAGE';\nexport const SET_SIGNING_BOX = 'debot/SET_SIGNING_BOX';\nexport const SET_APPROVE_WINDOW = 'debot/SET_APPROVE_WINDOW';\nexport const SET_DEBOTS_FILTER_KEY = 'debot/SET_DEBOTS_FILTER_KEY';\nexport const SET_LOCAL_DEBOTS_LIST = 'debot/SET_LOCAL_DEBOTS_LIST';\n\nexport const pushItemToStage = item => dispatch => {\n\tdispatch({\n\t\ttype: PUSH_ITEM_TO_STAGE,\n\t\tpayload: item,\n\t})\n}\n\nexport const clearStage = () => dispatch => {\n\tdispatch({ type: CLEAR_STAGE });\n}\n\nexport const setSigningBox = signingBoxInfo => dispatch => {\n\tdispatch({\n\t\ttype: SET_SIGNING_BOX,\n\t\tpayload: signingBoxInfo,\n\t})\n}\n\nexport const setApproveWindow = approveWindowInfo => dispatch => {\n\tdispatch({\n\t\ttype: SET_APPROVE_WINDOW,\n\t\tpayload: approveWindowInfo,\n\t})\n}\n\nexport const setDebotsFilterKey = filterValue => dispatch => {\n\tdispatch({\n\t\ttype: SET_DEBOTS_FILTER_KEY,\n\t\tpayload: filterValue,\n\t})\n}\n\nexport const setLocalDebotsList = debotsList => dispatch => {\n\tdispatch({\n\t\ttype: SET_LOCAL_DEBOTS_LIST,\n\t\tpayload: debotsList,\n\t})\n}\n","import store from 'src/store';\nimport { setLocalDebotsList } from 'src/store/actions/debot';\nimport { USER_DEBOTS_LS_FIELD } from 'src/constants';\n\nfunction addLocalDebot(debotObj) {\n\tconst localDebosFromLS = JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [];\n\n\tconst newLocalDebots = [debotObj, ...localDebosFromLS];\n\n\tstore.dispatch(setLocalDebotsList(newLocalDebots));\n\tlocalStorage.setItem(USER_DEBOTS_LS_FIELD, JSON.stringify(newLocalDebots));\n}\n\nexport default addLocalDebot;\n","export const SET_ENVIRONMENT_VARIABLE = 'debot/SET_ENVIRONMENT_VARIABLES';\n\nexport const setEnvironmentVariables = variables => dispatch => {\n\tdispatch({\n\t\ttype: SET_ENVIRONMENT_VARIABLE,\n\t\tpayload: variables,\n\t})\n}\n","import store from 'src/store';\nimport { setEnvironmentVariables } from 'src/store/actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nfunction addEnvVariable(key, value) {\n\tconst envFromLS = JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {};\n\n\tconst newEnv = {\n\t\t...envFromLS,\n\t\t[key]: value,\n\t};\n\n\tstore.dispatch(setEnvironmentVariables(newEnv));\n\tlocalStorage.setItem(USER_ENV_LS_FIELD, JSON.stringify(newEnv));\n}\n\nexport default addEnvVariable;\n","function encodeString(decodedString){\n\tif (typeof decodedString !== 'string')\n\t\treturn;\n\n\tconst hex = unescape(encodeURIComponent(decodedString))\n\t\t.split('')\n\t\t.map(char => char.charCodeAt(0).toString(16))\n\t\t.join('');\n\n\treturn hex;\n}\n\nexport default encodeString;\n","function createDebotUrl(debotAddress) {\n\treturn `/debot?debotAddress=${debotAddress}`;\n}\n\nexport default createDebotUrl;\n","import { EXPLORER_BASE_URL } from 'src/constants';\n\nfunction createExplorerUrl(addr) {\n\treturn `${EXPLORER_BASE_URL}${addr}`;\n}\n\nexport default createExplorerUrl;\n","import { TonClient } from '@tonclient/core';\nimport { libWeb } from '@tonclient/lib-web';\nimport { TON_NETWORK_LS_FIELD, MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\nTonClient.useBinaryLibrary(libWeb);\n\nclass TonClientController {\n\tconstructor() {\n\t\tthis.selectedNetwork = localStorage.getItem(TON_NETWORK_LS_FIELD) || MAIN_NETWORK;\n\n\t\tthis.mainNetClient = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tserver_address: MAIN_NETWORK,\n\t\t\t},\n\t\t});\n\n\t\tthis.devNetClient = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tserver_address: DEV_NETWORK,\n\t\t\t},\n\t\t});\n\t}\n\n\tsetSelectedNetwork(network) {\n\t\tlocalStorage.setItem(TON_NETWORK_LS_FIELD, network);\n\t\tthis.selectedNetwork = network;\n\t}\n\n\tget client() {\n\t\tif (this.selectedNetwork === DEV_NETWORK)\n\t\t\treturn this.devNetClient;\n\n\t\treturn this.mainNetClient;\n\t}\n}\n\nconst clientController = new TonClientController();\n\nexport default clientController;\n","import tonClientController from 'src/tonClient';\n\nasync function checkIsValidAddress(address) {\n\ttry {\n\t\tconst result = await tonClientController.client.utils.convert_address({\n\t\t\taddress,\n\t\t\toutput_format: {\n\t\t\t\ttype: 'Hex',\n\t\t\t}\n\t\t})\n\n\t\treturn !!result;\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n\nexport default checkIsValidAddress;\n","function formDebotFunctionFromId(id) {\n\treturn `0x${parseInt(id, 10).toString(16)}`\n}\n\nexport default formDebotFunctionFromId;\n","const generateRandomColor = () => Math.floor(Math.random()*16777215).toString(16);\n\nexport default generateRandomColor;\n","import tonClientController from 'src/tonClient';\nimport { MNEMONIC_WORD_COUNT, DERIVATION_PATH } from 'src/constants';\n\nasync function genKeyPairFromMnemonic(mnemonic) {\n\tconst hdkMaster = await tonClientController.client.crypto.hdkey_xprv_from_mnemonic({\n\t\tdictionary: 1,\n\t\tword_count: MNEMONIC_WORD_COUNT,\n\t\tphrase: mnemonic,\n\t});\n\n\tconst hdkRoot = await tonClientController.client.crypto.hdkey_derive_from_xprv_path({\n\t\txprv: hdkMaster.xprv,\n\t\tpath: DERIVATION_PATH,\n\t});\n\n\tconst { secret } = await tonClientController.client.crypto.hdkey_secret_from_xprv({\n\t\txprv: hdkRoot.xprv,\n\t});\n\n\tconst keyPair = await tonClientController.client.crypto.nacl_sign_keypair_from_secret_key({ secret });\n\n\treturn {\n\t\tsecret,\n\t\tpublic: keyPair.public,\n\t};\n}\n\nexport default genKeyPairFromMnemonic;\n","import store from 'src/store';\n\nfunction getEnvVariableFromInput(text) {\n\tif (!text.startsWith('$'))\n\t\treturn false;\n\t\n\tconst varName = text.slice(1);\n\n\tconst { variables } = store.getState().environment;\n\n\treturn variables[varName];\n}\n\nexport default getEnvVariableFromInput;\n","import store from 'src/store';\nimport { setLocalDebotsList } from 'src/store/actions/debot';\nimport { USER_DEBOTS_LS_FIELD } from 'src/constants';\n\nfunction removeLocalDebot(debotAddress) {\n\tconst localDebosFromLS = JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [];\n\n\tconst newLocalDebots = localDebosFromLS.filter(debot => debot.address !== debotAddress);\n\n\tstore.dispatch(setLocalDebotsList(newLocalDebots));\n\tlocalStorage.setItem(USER_DEBOTS_LS_FIELD, JSON.stringify(newLocalDebots));\n}\n\nexport default removeLocalDebot;\n","import store from 'src/store';\nimport { setEnvironmentVariables } from 'src/store/actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nfunction removeEnvVariable(key) {\n\tconst envFromLS = JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {};\n\n\tconst newEnv = { ...envFromLS };\n\n\tdelete newEnv[key];\n\n\tstore.dispatch(setEnvironmentVariables(newEnv));\n\tlocalStorage.setItem(USER_ENV_LS_FIELD, JSON.stringify(newEnv));\n}\n\nexport default removeEnvVariable;\n","function isCustomScrollBar() {\n\treturn !navigator.platform.toLowerCase().includes('mac');\n}\n\nexport default isCustomScrollBar;\n","import { useLocation } from 'react-router-dom';\n\nfunction useSearchParams() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nexport default useSearchParams;\n","import useSearchParams from './useSearchParams';\nimport { DEBOT_ADDRESS_SEARCH_PARAM } from 'src/constants';\n\nfunction useDebotAddress() {\n\tconst searchParams = useSearchParams();\n\treturn searchParams.get(DEBOT_ADDRESS_SEARCH_PARAM);\n}\n\nexport default useDebotAddress;\n","import {\n\tADD_ACCOUNT,\n\tSELECT_ACCOUNT,\n\tREMOVE_ACCOUNT,\n\tSET_ADD_ACCOUNT_MODAL,\n} from '../actions/account';\nimport { ACCOUNTS_LIST_LS_FIELD, CHOSEN_ACCOUNT_LS_FIELD } from 'src/constants';\nimport { generateRandomColor } from 'src/helpers';\n\nconst initialState = {\n\taddAccountModal: null,\n\tchosenAccountAddress: localStorage.getItem(CHOSEN_ACCOUNT_LS_FIELD) || null,\n\taccountsList: JSON.parse(localStorage.getItem(ACCOUNTS_LIST_LS_FIELD)) || [],\n}\n  \nfunction reducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase ADD_ACCOUNT: {\n\t\t\tconst color = generateRandomColor();\n\t\t\tconst accountData = {\n\t\t\t\t...payload,\n\t\t\t\tcolor: `#${color}`,\n\t\t\t}\n\t\t\tconst accountsList = [...state.accountsList, accountData];\n\t\t\tconst chosenAccountAddress = payload.address;\n\n\t\t\tlocalStorage.setItem(ACCOUNTS_LIST_LS_FIELD, JSON.stringify(accountsList));\n\t\t\tlocalStorage.setItem(CHOSEN_ACCOUNT_LS_FIELD, chosenAccountAddress);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccountsList,\n\t\t\t\tchosenAccountAddress,\n\t\t\t}\n\t\t}\n\n\t\tcase SELECT_ACCOUNT: {\n\t\t\tlocalStorage.setItem(CHOSEN_ACCOUNT_LS_FIELD, payload);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tchosenAccountAddress: payload,\n\t\t\t}\n\t\t}\n\n\t\tcase REMOVE_ACCOUNT: {\n\t\t\tconst accountsList = state.accountsList.filter(account => account.address !== payload);\n\t\t\tconst isDeletingActiveAccount = state.chosenAccountAddress === payload;\n\t\t\tconst chosenAccountAddress = isDeletingActiveAccount ? accountsList[0] : state.chosenAccountAddress;\n\n\t\t\tlocalStorage.setItem(ACCOUNTS_LIST_LS_FIELD, JSON.stringify(accountsList));\n\t\t\tlocalStorage.setItem(CHOSEN_ACCOUNT_LS_FIELD, chosenAccountAddress);\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taccountsList,\n\t\t\t\tchosenAccountAddress,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_ADD_ACCOUNT_MODAL: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\taddAccountModal: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n","import {\n\tPUSH_ITEM_TO_STAGE,\n\tCLEAR_STAGE,\n\tSET_SIGNING_BOX,\n\tSET_APPROVE_WINDOW,\n\tSET_DEBOTS_FILTER_KEY,\n\tSET_LOCAL_DEBOTS_LIST,\n} from '../actions/debot';\nimport { USER_DEBOTS_LS_FIELD, DEV_NETWORK } from 'src/constants';\n\nconst initialState = {\n\tstage: [],\n\tsigningBox: null,\n\tapproveWindow: null,\n\tfilterKey: '',\n\tdebotsList: [\n\t\t{ title: 'TIP-3 DeBot', address: '0:81c12c2f4514124536aafea59db7df0262d3af877b4477afe6514bbc5bc9f317', network: DEV_NETWORK },\n\t\t{ title: 'SMV DeBot (RSquad)', address: '0:2a92e3d01c530697a0ec3ab5c3494474faa7ea0af5fa30d4ed508115bc9957a7', network: DEV_NETWORK },\n\t],\n\tlocalDebotsList: JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [],\n}\n  \nfunction reducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase PUSH_ITEM_TO_STAGE: {\n\t\t\tconst stage = [...state.stage, payload];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstage,\n\t\t\t}\n\t\t}\n\n\t\tcase CLEAR_STAGE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstage: [],\n\t\t\t}\n\t\t}\n\n\t\tcase SET_SIGNING_BOX: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsigningBox: payload,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_APPROVE_WINDOW: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapproveWindow: payload,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_DEBOTS_FILTER_KEY: {\n\t\t\tconst filterKey = payload.toLowerCase();\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilterKey,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_LOCAL_DEBOTS_LIST: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocalDebotsList: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n","import {\n\tSET_ENVIRONMENT_VARIABLE,\n} from '../actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nconst initialState = {\n\tvariables: JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {},\n}\n  \nfunction reducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_ENVIRONMENT_VARIABLE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvariables: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n","import { combineReducers } from 'redux';\nimport account from './account';\nimport debot from './debot';\nimport environment from './environment';\n\nconst rootReducer = combineReducers({\n\taccount,\n\tdebot,\n\tenvironment,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n\tthunk,\n];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\tif (typeof devToolsExtension === 'function')\n\t\tenhancers.push(devToolsExtension());\n}\n\nconst composedEnhancers = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers,\n);\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposedEnhancers,\n);\n\nexport default store;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { useSelector } from 'react-redux';\nimport { Header, DebotsList, DebotPage, AddAccount } from 'src/components';\nimport './index.scss';\n\nconst App = () => {\n\tconst isAccountModalVisible = useSelector(state => !!state.account.addAccountModal);\n\n\treturn (\n\t\t<div className='app-container'>\n\t\t\t<Header />\n\t\t\t<div className='app-container__flex-wrapper'>\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={DebotsList} />\n\t\t\t\t\t<Route path='/debot' component={DebotPage} />\n\t\t\t\t</Switch>\n\t\t\t\t{isAccountModalVisible && <AddAccount />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\n\nconst LensIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='lens-icon'\n\t\twidth='22'\n\t\theight='22'\n\t\tviewBox='0 0 22 22'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tonClick={onClick}\n\t>\n\t\t<path\n\t\t\td='M16.8881 8.72414C16.8881 13.2678 13.2179 16.9483 8.69405 16.9483C4.17023 16.9483 0.5 13.2678 0.5 8.72414C0.5 4.18044 4.17023 0.5 8.69405 0.5C13.2179 0.5 16.8881 4.18044 16.8881 8.72414Z'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t\t<line\n\t\t\ty1='-0.5'\n\t\t\tx2='9.63903'\n\t\t\ty2='-0.5'\n\t\t\ttransform='matrix(0.705884 0.708327 -0.705884 0.708327 14.3643 15.1724)'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t</svg>\n)\n\nexport default LensIcon;\n","import React from 'react';\n\nconst ArrowIcon = () => (\n\t<svg\n\t\tclassName='arrow-icon'\n\t\twidth='14'\n\t\theight='9'\n\t\tviewBox='0 0 14 9'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M6.76449 9L0.338936 0.230769L13.19 0.23077L6.76449 9Z' fill='#737373'/>\n\t</svg>\n)\n\nexport default ArrowIcon;\n","import React from 'react';\n\nconst BackIcon = () => (\n\t<svg\n\t\tclassName='back-icon'\n\t\txmlns=\"http://www.w3.org/2000/svg\"\n\t\twidth=\"24px\"\n\t\theight=\"24px\"\n\t\tviewBox=\"0 0 24 24\"\n\t>\n\t\t<path \n\t\t\tfill=\"currentColor\"\n\t\t\tfillRule=\"evenodd\"\n\t\t\td=\"M12 4l1.41 1.41L7.83 11H20v2H7.83l5.58 5.59L12 20l-8-8z\">\n\t\t</path>\n\t</svg>\n)\n\nexport default BackIcon;\n","import React from 'react';\n\nconst CancelIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='cancel-icon'\n\t\tonClick={onClick}\n\t\twidth='12'\n\t\theight='12'\n\t\tviewBox='0 0 12 12'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M9.99902 2L1.99989 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t\t<path d='M2.00098 2L10.0001 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t</svg>\n)\n\nexport default CancelIcon;\n","import React from 'react';\n\nconst DevNetIcon = ({ className }) => (\n\t<img\n\t\tsrc='/dev-net-icon.png'\n\t\tclassName={className ? `network-icon ${className}` : 'network-icon'}\n\t\talt='network'\n\t/>\n)\n\nexport default DevNetIcon;\n","import React from 'react';\n\nconst MainNetIcon = ({ className }) => (\n\t<img\n\t\tsrc='/main-net-icon.png'\n\t\tclassName={className ? `network-icon ${className}` : 'network-icon'}\n\t\talt='network'\n\t/>\n)\n\nexport default MainNetIcon;\n","const TERMINAL_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n        {\n\t\t\t\"name\": \"input\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"multiline\",\"type\":\"bool\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputStr\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n                {\"name\":\"prompt\",\"type\":\"bytes\"},\n                {\"name\":\"multiline\",\"type\":\"bool\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputInt\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"int256\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputUint\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint256\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputTons\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint128\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputBoolean\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bool\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"print\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"message\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default TERMINAL_ABI;\n","const MENU_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"title\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"description\",\"type\":\"bytes\"},\n\t\t\t\t{\"components\":[{\"name\":\"title\",\"type\":\"bytes\"},{\"name\":\"description\",\"type\":\"bytes\"},{\"name\":\"handlerId\",\"type\":\"uint32\"}],\"name\":\"items\",\"type\":\"tuple[]\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"index\",\"type\":\"uint32\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n}\n\nexport default MENU_ABI;\n","const AMOUNT_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"decimals\",\"type\":\"uint8\"},\n\t\t\t\t{\"name\":\"min\",\"type\":\"uint128\"},\n\t\t\t\t{\"name\":\"max\",\"type\":\"uint128\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint128\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default AMOUNT_INPUT_ABI;\n","const CONFIRM_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bool\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default CONFIRM_INPUT_ABI;\n","const ADDRESS_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"address\"}\n\t\t\t]\n\t\t},\n        {\n\t\t\t\"name\": \"select\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"address\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default ADDRESS_INPUT_ABI;","const NUMBER_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"min\",\"type\":\"int256\"},\n\t\t\t\t{\"name\":\"max\",\"type\":\"int256\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"int256\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default NUMBER_INPUT_ABI;\n","const ECHO_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"echo\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"request\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"response\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default ECHO_ABI;\n","const STDOUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"print\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"message\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default STDOUT_ABI;\n","const USERINFO_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"getAccount\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"address\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"getPublicKey\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint256\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default USERINFO_ABI;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { TERMINAL_ABI } from '../ABIs';\n\nconst ID = '8796536366ee21852db56dccb60bc564598b618c865fc50c8b1ab740bba128e3';\n\nclass Terminal {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = TERMINAL_ABI;\n\t}\n\n\tinputStr(params) {\n\t\tconst { answerId, multiline, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: multiline ? COMPONENTS_BINDINGS.TEXTAREA : COMPONENTS_BINDINGS.INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputInt(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputTons(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig: {\n\t\t\t\tmin: '0',\n\t\t\t\tdecimals: '9',\n\t\t\t},\n\t\t\tcomponent: COMPONENTS_BINDINGS.TOKENS_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputBoolean(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.CONFIRM_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tprint(params) {\n\t\tconst { answerId, message } = params.value;\n\n\t\tconst decodedMessage = decodeString(message);\n\t\tconst stageObject = {\n\t\t\ttext: decodedMessage,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'input':\n\t\t\t\t\treturn this.inputStr(extendedParams);\n\n\t\t\t\tcase 'inputStr':\n\t\t\t\t\treturn this.inputStr(extendedParams);\n\t\t\t\t\n\t\t\t\tcase 'inputInt':\n\t\t\t\t\treturn this.inputInt(extendedParams);\n\n\t\t\t\tcase 'inputUint':\n\t\t\t\t\treturn this.inputInt(extendedParams);\n\n\t\t\t\tcase 'inputTons':\n\t\t\t\t\treturn this.inputTons(extendedParams);\n\n\t\t\t\tcase 'inputBoolean':\n\t\t\t\t\treturn this.inputBoolean(extendedParams);\n\n\t\t\t\tcase 'print':\n\t\t\t\t\treturn this.print(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Terminal;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { MENU_ABI } from '../ABIs';\n\nconst ID = 'ac1a4d3ecea232e49783df4a23a81823cdca3205dc58cd20c4db259c25605b48';\n\nclass Menu {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = MENU_ABI;\n\t}\n\n\tselect(params) {\n\t\tconst { description, title, items } = params.value;\n\n\t\tconst decodedTitle = decodeString(title);\n\t\tconst decodedDescription = decodeString(description);\n\t\tconst menuItems = items.map(item => ({\n\t\t\tfunctionId: item.handlerId,\n\t\t\ttitle: decodeString(item.title),\n\t\t\tdescription: decodeString(item.description),\n\t\t}));\n\n\t\tconst stageObject = {\n\t\t\ttitle: decodedTitle,\n\t\t\ttext: decodedDescription,\n\t\t\tmenuItems,\n\t\t\tcomponent: COMPONENTS_BINDINGS.MENU,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn this.select(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Menu;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { AMOUNT_INPUT_ABI } from '../ABIs';\n\nconst ID = 'a1d347099e29c1624c8890619daf207bde18e92df5220a54bcc6d858309ece84';\n\nclass AmountInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = AMOUNT_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt, min, max, ...config } = params.value;\n\n\t\tconfig.min = min;\n\t\tconfig.max = max;\n\n\t\tif (max && min && parseInt(max) < parseInt(min)) {\n\t\t\tconfig.max = min;\n\t\t}\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default AmountInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { CONFIRM_INPUT_ABI } from '../ABIs';\n\nconst ID = '16653eaf34c921467120f2685d425ff963db5cbb5aa676a62a2e33bfc3f6828a';\n\nclass ConfirmInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = CONFIRM_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.CONFIRM_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default ConfirmInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { ADDRESS_INPUT_ABI } from '../ABIs';\n\nconst ID = 'd7ed1bd8e6230871116f4522e58df0a93c5520c56f4ade23ef3d8919a984653b';\n\nclass AddressInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = ADDRESS_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = prompt ? decodeString(prompt) : '';\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.ADDRESS_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tselect(params) {\n\t\treturn this.get(params);\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn this.select(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default AddressInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { NUMBER_INPUT_ABI } from '../ABIs';\n\nconst ID = 'c5a9558b2664aed7dc3e6123436d544f13ffe69ab0e259412f48c6d1c8588401';\n\nclass NumberInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = NUMBER_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt, max, min, ...config } = params.value;\n\t\t\n\t\tconsole.log(min, max);\n\n\t\tconfig.min = min;\n\t\tconfig.max = max;\n\n\t\tif (max && min && parseInt(max) < parseInt(min)) {\n\t\t\tconfig.max = min;\n\t\t}\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default NumberInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { DEngine } from 'src/debot';\nimport { decodeString, encodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { ECHO_ABI } from '../ABIs';\n\nconst ID = 'f6927c0d4bdb69e1b52d27f018d156ff04152f00558042ff674f0fec32e4369d';\n\nclass Echo {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = ECHO_ABI;\n\t}\n\n\techo(params) {\n\t\tconst { debotAddress } = params;\n\t\tconst { answerId, request } = params.value;\n\n\t\tconst decodedRequest = decodeString(request);\n\t\tconst response = encodeString(decodedRequest);\n\t\tconst interfaceAddress = `${DEBOT_WC}:${this.id}`;\n\t\t\n\t\tDEngine.callDebotFunction(debotAddress, interfaceAddress, answerId, { response })\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\n\t\t\t\tconst stageObject = {\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\t\tisError: true,\n\t\t\t\t\tinterfaceAddress,\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t\t});\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'echo':\n\t\t\t\t\treturn this.echo(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Echo;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { STDOUT_ABI } from '../ABIs';\n\nconst ID = 'c91dcc3fddb30485a3a07eb7c1e5e2aceaf75f4bc2678111de1f25291cdda80b';\n\nclass Stdout {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = STDOUT_ABI;\n\t}\n\n\tprint(params) {\n\t\tconst { message } = params.value;\n\n\t\tconst decodedMessage = decodeString(message);\n\t\tconst stageObject = {\n\t\t\ttext: decodedMessage,\n\t\t\tcomponent: COMPONENTS_BINDINGS.STDOUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'print':\n\t\t\t\t\treturn this.print(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Stdout;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { encodeString } from 'src/helpers';\nimport { DEBOT_WC } from 'src/constants';\nimport { setAddAccountModal } from 'src/store/actions/account';\nimport { USERINFO_ABI } from '../ABIs';\nimport { DEngine } from 'src/debot';\n\nconst ID = 'a56115147709ed3437efb89460b94a120b7fe94379c795d1ebb0435a847ee580';\n\nclass Userinfo {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = USERINFO_ABI;\n\t}\n\n\t_getAccountData(debotAddress, interfaceAddress, answerId, isPubkey) {\n\t\tconst { accountsList, chosenAccountAddress } = store.getState().account;\n\n\t\tif (!accountsList?.length) {\n\t\t\tsetAddAccountModal({\n\t\t\t\tisVisible: true,\n\t\t\t\tdebotAddress,\n\t\t\t\tfunctionId: answerId,\n\t\t\t\tinterfaceAddress,\n\t\t\t\tisPubkey,\n\t\t\t});\n\n\t\t\treturn null;\n\t\t}\n\n\t\tconst chosenAccount = accountsList.find(account => account.address === chosenAccountAddress) || accountsList[0];\n\n\t\treturn chosenAccount;\n\t} \n\n\tasync getAccount(params) {\n\t\tconst { value: { answerId }, debotAddress } = params;\n\t\tconst interfaceAddress = `${DEBOT_WC}:${this.id}`;\n\t\tconst accountData = this._getAccountData(debotAddress, interfaceAddress, answerId);\n\n\t\tif (accountData) {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, answerId, { value: accountData.address });\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync getPublicKey(params) {\n\t\tconst { value: { answerId }, debotAddress } = params;\n\t\tconst interfaceAddress = `${DEBOT_WC}:${this.id}`;\n\t\tconst accountData = this._getAccountData(debotAddress, interfaceAddress, answerId, true);\n\n\t\tif (accountData) {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, answerId, { value: encodeString(accountData.pubkey) });\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t}\n\t\t}\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'getAccount':\n\t\t\t\t\treturn this.getAccount(extendedParams);\n\n\t\t\t\tcase 'getPublicKey':\n\t\t\t\t\treturn this.getPublicKey(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Userinfo;\n","import Terminal from './terminal';\nimport Menu from './menu';\nimport AmountInput from './amount_input';\nimport ConfirmInput from './confirm_input';\nimport AddressInput from './address_input';\nimport NumberInput from './number_input';\nimport Echo from './echo';\nimport Stdout from './stdout';\nimport Userinfo from './userinfo';\n\nclass InterfacesController {\n\tconstructor() {\n\t\tconst terminal = new Terminal();\n\t\tconst menu = new Menu();\n\t\tconst amountInput = new AmountInput();\n\t\tconst confirmInput = new ConfirmInput();\n\t\tconst addressInput = new AddressInput();\n\t\tconst numberInput = new NumberInput();\n\t\tconst echo = new Echo();\n\t\tconst stdout = new Stdout();\n\t\tconst userinfo = new Userinfo();\n\n\t\tthis.state = new Map([\n\t\t\t[terminal.id, terminal],\n\t\t\t[menu.id, menu],\n\t\t\t[amountInput.id, amountInput],\n\t\t\t[confirmInput.id, confirmInput],\n\t\t\t[addressInput.id, addressInput],\n\t\t\t[numberInput.id, numberInput],\n\t\t\t[echo.id, echo],\n\t\t\t[stdout.id, stdout],\n\t\t\t[userinfo.id, userinfo],\n\t\t]);\n\t}\n\n\tcheckAreInterfacesSupported(interfaces) {\n\t\tfor (const interfaceAddress of interfaces) {\n\t\t\tconst interfaceId = interfaceAddress.slice(2);\n\n\t\t\tif (!this.state.has(interfaceId))\n\t\t\t\treturn false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tdelegateToInterface(interfaceId, params) {\n\t\tconst _interface = this.state.get(interfaceId);\n\n\t\tconsole.log(`Calling ${_interface?.constructor?.name} by id: ${interfaceId}`);\n\n\t\ttry {\n\t\t\t_interface.call(params);\n\t\t} catch(_) {\n\t\t\tconsole.error(`Interface with id ${interfaceId} is not implemented`);\n\t\t}\n\t}\n}\n\nconst interfacesController = new InterfacesController();\n\nexport default interfacesController;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { DEngine } from 'src/debot';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { setSigningBox, setApproveWindow } from 'src/store/actions/debot';\nimport InterfacesController from './interfaces';\n\nclass DebotBrowser {\n\tconstructor() {\n\t\tthis.debot_handle = null;\n\t\tthis.debot_abi = null;\n\t\tthis.info = null;\n\t\tthis.deprecatedMessageTimeout = null;\n\t\tthis.interfacesQueue = [];\n\t}\n\n\tsetDebotParams(params) {\n\t\tconst { debot_handle, debot_abi, info } = params;\n\n\t\tthis.debot_handle = debot_handle;\n\t\tthis.debot_abi = debot_abi;\n\t\tthis.info = info;\n\t}\n\n\treleaseInterfacesQueue() {\n\t\tthis.interfacesQueue.shift();\n\n\t\tif (this.interfacesQueue.length) {\n\t\t\tconst interfaceState = this.interfacesQueue[0];\n\t\t\tconst { interfaceId, debotAddress, params } = interfaceState;\n\n\t\t\tInterfacesController.delegateToInterface(interfaceId, {\n\t\t\t\tdebotAddress,\n\t\t\t\t...params,\n\t\t\t});\n\t\t}\n\t}\n\n\tclearInterfacesQueue() {\n\t\tthis.interfacesQueue = [];\n\t}\n\n\tshowDeprecatedMessage() {\n\t\tif (this.deprecatedMessageTimeout)\n\t\t\tclearTimeout(this.deprecatedMessageTimeout);\n\n\t\tthis.deprecatedMessageTimeout = setTimeout(() => {\n\t\t\tthis.deprecatedMessageTimeout = null;\n\n\t\t\tconst stageObject = {\n\t\t\t\ttext: 'This DeBot is deprecated and therefore no longer supported.',\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}, 1000)\n\t}\n\n\tlog(loggerParams) {\n\t\tconst browserParams = {\n\t\t\tdebot_handle: this.debot_handle,\n\t\t\tdebot_abi: this.debot_abi,\n\t\t\tinfo: this.info,\n\t\t};\n\n\t\tconsole.log(browserParams, loggerParams);\n\n\t\tif (loggerParams.msg) {\n\t\t\tconst stageObject = {\n\t\t\t\ttext: loggerParams.msg,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}\n\t}\n\n\tshow_action() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tinput() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tasync get_signing_box() {\n\t\tconst keysPromise = new Promise((resolve) => {\n\t\t\tstore.dispatch(setSigningBox({\n\t\t\t\tsubmit: resolve,\n\t\t\t}));\n\t\t});\n\n\t\tconst keys = await keysPromise;\n\n\t\tconst { handle } = await tonClientController.client.crypto.get_signing_box(keys);\n\n\t\tstore.dispatch(setSigningBox(null));\n\n\t\treturn { signing_box: handle };\n\t}\n\n\tinvoke_debot() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tasync send(params) {\n\t\ttry {\n\t\t\tconst parsedMessage = await tonClientController.client.boc.parse_message({ boc: params.message })\n\n\t\t\tconst { dst, src, dst_workchain_id } = parsedMessage.parsed;\n\t\t\tconst [, interfaceId] = dst.split(':');\n\t\n\t\t\tif (dst_workchain_id === DEBOT_WC) {\n\t\t\t\tthis.interfacesQueue.push({\n\t\t\t\t\tinterfaceId,\n\t\t\t\t\tdebotAddress: src,\n\t\t\t\t\tparams,\n\t\t\t\t})\n\n\t\t\t\tif (this.interfacesQueue.length === 1) {\n\t\t\t\t\tInterfacesController.delegateToInterface(interfaceId, {\n\t\t\t\t\t\tdebotAddress: src,\n\t\t\t\t\t\t...params,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Call other debot', parsedMessage, params);\n\n\t\t\t\tif (DEngine.storage.has(dst)) {\n\t\t\t\t\tconst { debot_handle } = DEngine.storage.get(dst);\n\n\t\t\t\t\tawait DEngine.debotModule.send({ debot_handle, message: params.message });\n\t\t\t\t} else {\n\t\t\t\t\tconst { debot_handle } = await DEngine.initDebot(dst);\n\n\t\t\t\t\tawait DEngine.debotModule.send({ debot_handle, message: params.message });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\n\t\t\tconst stageObject = {\n\t\t\t\ttext: err.message,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}\t\n\t}\n\n\tasync approve(params) {\n\t\tconst approvePromise = new Promise((resolve) => {\n\t\t\tstore.dispatch(setApproveWindow({\n\t\t\t\tsubmit: resolve,\n\t\t\t\tparams: params.activity,\n\t\t\t}));\n\t\t});\n\n\t\tconst approved = await approvePromise;\n\n\t\tstore.dispatch(setApproveWindow(null));\n\n\t\treturn { approved };\n\t}\n}\n\nexport default DebotBrowser;","import store from 'src/store';\nimport { DebotModule } from '@tonclient/core';\nimport tonClientController from 'src/tonClient';\nimport { formDebotFunctionFromId } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEV_NETWORK } from 'src/constants';\nimport { pushItemToStage, clearStage, setApproveWindow, setSigningBox } from 'src/store/actions/debot';\nimport DebotBrowser from './DebotBrowser';\nimport InterfacesController from './interfaces';\n\nclass DEngine {\n\tconstructor() {\n\t\tthis.mainDebotModule = new DebotModule(tonClientController.mainNetClient);\n\t\tthis.devDebotModule = new DebotModule(tonClientController.devNetClient);\n\t\tthis.storage = new Map();\n\t}\n\n\tget debotModule() {\n\t\tif (tonClientController.selectedNetwork === DEV_NETWORK)\n\t\t\treturn this.devDebotModule;\n\n\t\treturn this.mainDebotModule;\n\t}\n\n\tasync initDebot(address) {\n\t\tconst debotBrowser = new DebotBrowser();\n\n\t\tconst initParams = await this.debotModule.init({ address }, debotBrowser);\n\n\t\tdebotBrowser.setDebotParams(initParams);\n\t\tthis.storage.set(address, { ...initParams, browser: debotBrowser });\n\n\t\treturn initParams\n\t}\n\n\tasync runDebot(address) {\n\t\tconst initParams = await this.initDebot(address);\n\n\t\tconst { debot_handle, info: { interfaces } } = initParams;\n\n\t\tconst isDebotSupported = InterfacesController.checkAreInterfacesSupported(interfaces);\n\n\t\tif (!isDebotSupported)\n\t\t\treturn this.showUnsupportedMessage();\n\n\t\tawait this.debotModule.start({ debot_handle });\n\n\t\treturn initParams;\n\t}\n\n\tasync callDebotFunction(debotAddress, interfaceAddress, functionId, input) {\n\t\tconst debotParams = this.storage.get(debotAddress);\n\t\tconst { debot_handle, debot_abi, browser } = debotParams;\n\n\t\tlet call_set;\n\n\t\tif (functionId && functionId !== '0') {\n\t\t\tconst functionName = formDebotFunctionFromId(functionId);\n\n\t\t\tcall_set = {\n\t\t\t\tfunction_name: functionName,\n\t\t\t}\n\n\t\t\tif (input) {\n\t\t\t\tcall_set.input = input;\n\t\t\t}\n\t\t}\n\n\t\tconst encodedMessage = await tonClientController.client.abi.encode_internal_message({\n\t\t\tabi: {\n\t\t\t\ttype: 'Json',\n\t\t\t\tvalue: debot_abi,\n\t\t\t},\n\t\t\taddress: debotAddress,\n\t\t\tsrc_address: interfaceAddress,\n\t\t\tcall_set,\n\t\t\tvalue: '1000000000000000',\n\t\t});\n\n\t\ttry {\n\t\t\tconst sendRes = await this.debotModule.send({ debot_handle, message: encodedMessage.message });\n\n\t\t\tbrowser.releaseInterfacesQueue();\n\n\t\t\treturn sendRes;\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\n\t\t\tbrowser.releaseInterfacesQueue();\n\n\t\t\tstore.dispatch(pushItemToStage({\n\t\t\t\ttext: err.message,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t}));\n\t\t}\n\t}\n\n\tasync reloadDebot(address) {\n\t\tstore.dispatch(clearStage());\n\t\tstore.dispatch(setApproveWindow(null));\n\t\tstore.dispatch(setSigningBox(null));\n\t\t\n\t\tconst debotParams = this.storage.get(address);\n\t\tconst { browser } = debotParams;\n\n\t\tbrowser.clearInterfacesQueue();\n\n\t\treturn this.runDebot(address);\n\t}\n\n\tshowUnsupportedMessage() {\n\t\tconst stageObject = {\n\t\t\ttext: 'This DeBot is not yet supported by our browser :(\\nTry another browser for now and come back to us later',\n\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n}\n\nconst dEngine = new DEngine();\n\nexport default dEngine;\n","import React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { setAddAccountModal, addAccount } from 'src/store/actions/account';\nimport { checkIsValidAddress, encodeString } from 'src/helpers';\nimport { CancelIcon } from 'src/components/icons';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst AddAccount = () => {\n\tconst dispatch = useDispatch();\n\tconst [address, setAddress] = useState('');\n\tconst [pubkey, setPubkey] = useState('');\n\tconst [label, setLabel] = useState('');\n\tconst [isAddressError, setIsAddressError] = useState('');\n\tconst [isPubkeyError, setIsPubkeyError] = useState('');\n\tconst [isLabelError, setIsLabelError] = useState('');\n\tconst { addAccountModal, chosenAccountAddress, accountsList } = useSelector(state => state.account);\n\tconst { debotAddress, interfaceAddress, functionId, isPubkey } = addAccountModal;\n\tconst isCalledFromDeBot = !!debotAddress;\n\n\tconst executeDebotFunction = async (accountData) => {\n\t\tif (accountData && isCalledFromDeBot) {\n\t\t\ttry {\n\t\t\t\tconst value = isPubkey ? encodeString(accountData.pubkey) : accountData.address;\n\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value });\n\n\t\t\t\tcloseModal();\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err.message);\n\t\t\t}\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tconst accountData = accountsList?.find(account => account.address === chosenAccountAddress);\n\n\t\texecuteDebotFunction(accountData);\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst handleLabelChange = e => {\n\t\tsetIsLabelError(false);\n\t\tsetLabel(e.currentTarget.value);\n\t}\n\n\tconst handleAddressChange = e => {\n\t\tsetIsAddressError(false);\n\t\tsetAddress(e.currentTarget.value);\n\t}\n\n\tconst handlePubkeyChange = e => {\n\t\tsetIsPubkeyError(false);\n\t\tsetPubkey(e.currentTarget.value);\n\t}\n\n\tconst closeModal = () => dispatch(setAddAccountModal(null));\n\n\tconst handleAddAccount = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst isValidAddress = await checkIsValidAddress(address);\n\t\tconst isValidLabel = !!label;\n\t\tconst isValidPubkey = !!pubkey;\n\t\tconst hasErrors = !isValidAddress || !isValidLabel || !isValidPubkey;\n\n\t\t!isValidAddress && setIsAddressError(true);\n\t\t!isValidLabel && setIsLabelError(true);\n\t\t!isValidPubkey && setIsPubkeyError(true);\n\n\t\tif (hasErrors)\n\t\t\treturn;\n\n\t\tconst accountData = {\n\t\t\tlabel,\n\t\t\taddress,\n\t\t\tpubkey,\n\t\t};\n\n\t\tdispatch(addAccount(accountData));\n\t\texecuteDebotFunction(accountData);\n\t\tcloseModal();\n\t};\n\n\treturn (\n\t\t<div className='add-account'>\n\t\t\t<div className='add-account__container'>\n\t\t\t\t{!isCalledFromDeBot\n\t\t\t\t\t&& <div className='add-account__cancel-icon'>\n\t\t\t\t\t\t<CancelIcon onClick={closeModal} />\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<div className='add-account__header'>\n\t\t\t\t\tAdd new Account\n\t\t\t\t</div>\n\t\t\t\t<div className='add-account__description'>\n\t\t\t\t\tAccount data will be used to communicate with DeBots\n\t\t\t\t</div>\n\t\t\t\t<form onSubmit={handleAddAccount} className='add-account__form'>\n\t\t\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t\t\t<span className='stage-component__input-label'>Label</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={`stage-component__input ${isLabelError ? '' : 'with-margin-for-errors '}`}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\t\tvalue={label}\n\t\t\t\t\t\t\tonChange={handleLabelChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{!!isLabelError && <span className='stage-component__input-error'>Field is required!</span>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t\t\t<span className='stage-component__input-label'>Address</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={`stage-component__input ${isAddressError ? '' : 'with-margin-for-errors '}`}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\t\tvalue={address}\n\t\t\t\t\t\t\tonChange={handleAddressChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{!!isAddressError && <span className='stage-component__input-error'>Invalid address!</span>}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t\t\t<span className='stage-component__input-label'>Public Key</span>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName={`stage-component__input ${isPubkeyError ? '' : 'with-margin-for-errors '}`}\n\t\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\t\tvalue={pubkey}\n\t\t\t\t\t\t\tonChange={handlePubkeyChange}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t{!!isPubkeyError && <span className='stage-component__input-error'>Field is required!</span>}\n\t\t\t\t\t</div>\n\t\t\t\t</form>\n\t\t\t\t<div className='add-account__confirm'>\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={handleAddAccount}\n\t\t\t\t\t\tclassName='stage-component__confirm-input-button'\n\t\t\t\t\t>\n\t\t\t\t\t\tSave\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default AddAccount;\n","/* eslint-disable camelcase */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createDebotUrl, checkIsValidAddress } from 'src/helpers';\nimport { setDebotsFilterKey } from 'src/store/actions/debot';\nimport { LensIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst SearchBar = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst searchDebot = async () => {\n\t\tconst isValidAddress = await checkIsValidAddress(inputValue);\n\n\t\tif (isValidAddress) {\n\t\t\tconst debotUrl = createDebotUrl(inputValue);\n\t\t\tdispatch(setDebotsFilterKey(''));\n\n\t\t\treturn history.push(debotUrl);\n\t\t}\n\n\t\tdispatch(setDebotsFilterKey(inputValue));\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSearch = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSearch) {\n\t\t\tevent.preventDefault();\n\t\t\tsearchDebot();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='search-bar-container'>\n\t\t\t<input\n\t\t\t\tclassName='search-bar-container__input'\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Enter debot address'\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t/>\n\t\t\t<LensIcon onClick={searchDebot} />\n\t\t</div>\n\t);\n}\n\nexport default SearchBar;\n","import React, { useState, useEffect } from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { useSelector, useDispatch } from 'react-redux';\nimport tonClientController from 'src/tonClient';\nimport { BackIcon, MainNetIcon, DevNetIcon, CancelIcon } from 'src/components/icons';\nimport { OptionsList } from 'src/components';\nimport { MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\nimport { removeAccount, selectAccount, setAddAccountModal } from 'src/store/actions/account';\nimport SearchBar from '../SearchBar';\nimport './index.scss';\n\nconst Header = () => {\n\tconst dispatch = useDispatch();\n\tconst [selectedNetwork, setSelectedNetwork] = useState(tonClientController.selectedNetwork);\n\tconst match = useRouteMatch('/debot');\n\tconst { chosenAccountAddress, accountsList } = useSelector(state => state.account);\n\tconst chosenAccount = accountsList.find(account => account.address === chosenAccountAddress) || accountsList[0];\n\n\tuseEffect(() => {\n\t\tsetSelectedNetwork(tonClientController.selectedNetwork);\n\t}, [match]);\n\n\tconst handleSelectNetwork = (network) => {\n\t\ttonClientController.setSelectedNetwork(network);\n\t\tsetSelectedNetwork(network);\n\t}\n\n\tconst renderSelectedNetwork = () => (\n\t\t<div className='options-list__selected-item'>\n\t\t\t{selectedNetwork === DEV_NETWORK ? <DevNetIcon /> : <MainNetIcon />}\n\t\t</div>\n\t)\n\n\tconst handleSelectAccount = accountAddress => dispatch(selectAccount(accountAddress));\n\n\tconst handleRemoveAccount = accountAddress => dispatch(removeAccount(accountAddress));\n\n\tconst handleAddAccount = () => dispatch(setAddAccountModal({ isVisible: true }));\n\n\tconst renderSelectedAccount = () => (\n\t\t<div className='options-list__selected-item'>\n\t\t\t<span className='selected-text-item'>{chosenAccount.label[0].toUpperCase()}</span>\n\t\t</div>\n\t)\n\n\tconst backButtonClassName = `header-container__back-button ${!match ? 'header-container__back-button--disabled' : ''}`\n\n\treturn (\n\t\t<header className='header-container'>\n\t\t\t<Link to='/' className={backButtonClassName}>\n\t\t\t\t<BackIcon />\n\t\t\t</Link>\n\t\t\t<SearchBar />\n\t\t\t<div className='header-container__settings-bar'>\n\t\t\t\t<OptionsList selectedItem={renderSelectedNetwork()} height={84} width={200} isDisabled={!!match}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => handleSelectNetwork(MAIN_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MainNetIcon />\n\t\t\t\t\t\t{MAIN_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => handleSelectNetwork(DEV_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DevNetIcon />\n\t\t\t\t\t\t{DEV_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t</OptionsList>\n\t\t\t\t{accountsList?.length\n\t\t\t\t\t? <OptionsList selectedItem={renderSelectedAccount()} height={'max-content'} width={200}>\n\t\t\t\t\t\t{accountsList.map(account => {\n\t\t\t\t\t\t\treturn <div\n\t\t\t\t\t\t\t\tclassName='options-list__list-item options-list__list-item--with-remove-icon'\n\t\t\t\t\t\t\t\tonClick={() => handleSelectAccount(account.address)}\n\t\t\t\t\t\t\t\tkey={account.address}\n\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t{`${account.label} (${account.address.slice(0, 6)})`}\n\t\t\t\t\t\t\t\t<div className='options-list__remove-item-icon'>\n\t\t\t\t\t\t\t\t\t<CancelIcon onClick={e => { e.stopPropagation(); handleRemoveAccount(account.address); }} />\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t})}\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName='header-container__add-account-button'\n\t\t\t\t\t\t\tonClick={handleAddAccount}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tAdd Account\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</OptionsList>\n\t\t\t\t\t: <div\n\t\t\t\t\t\tclassName='header-container__add-account-button'\n\t\t\t\t\t\tonClick={handleAddAccount}\n\t\t\t\t\t>\n\t\t\t\t\t\tAdd Account\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport tonClientController from 'src/tonClient';\nimport { Link } from 'react-router-dom';\nimport { createDebotUrl } from 'src/helpers';\nimport { DEV_NETWORK, MAIN_NETWORK } from 'src/constants';\nimport { MainNetIcon, DevNetIcon } from 'src/components/icons';\n\nconst ListItem = ({ debot, isGrey }) => {\n\tconst linkAddress = createDebotUrl(debot.address);\n\tconst listItemClassName = `debots-list__item ${isGrey ? 'debots-list__item--grey' : ''}`;\n\n\tconst handleNetworkSwitch = () => {\n\t\tif (debot.network)\n\t\t\ttonClientController.setSelectedNetwork(debot.network);\n\t}\n\n\treturn (\n\t\t<Link to={linkAddress} className={listItemClassName} onClick={handleNetworkSwitch}>\n\t\t\t<div className='debots-list__item-title'>\n\t\t\t\t{debot.title}\n\t\t\t\t{debot.network === DEV_NETWORK && <DevNetIcon />}\n\t\t\t\t{debot.network === MAIN_NETWORK && <MainNetIcon />}\n\t\t\t</div>\n\t\t\t<div className='debots-list__item-address'>\n\t\t\t\t{debot.address}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default ListItem;\n","import React, { Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Loader, ControlWithPopup, AddDebot, Environment } from 'src/components';\nimport { isCustomScrollBar } from 'src/helpers';\nimport DebotListItem from './ListItem';\nimport './index.scss';\n\nconst DebotsList = () => {\n\tconst debotsList = useSelector(state => state.debot.debotsList);\n\tconst localDebotsList = useSelector(state => state.debot.localDebotsList);\n\tconst filterKey = useSelector(state => state.debot.filterKey);\n\tconst filteredDebots = debotsList.filter(debot => debot.title.toLowerCase().startsWith(filterKey) || debot.address.startsWith(filterKey));\n\tconst filteredLocalDebots = localDebotsList.filter(debot => debot.title.toLowerCase().startsWith(filterKey) || debot.address.startsWith(filterKey));\n\n\tconst renderDebotListItems = () => filteredDebots.map((debot, index) => (\n\t\t<DebotListItem\n\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\tdebot={debot}\n\t\t\tkey={`${debot.address}-${index}`}\n\t\t/>\n\t));\n\n\tconst renderLocalDebotListItems = () => filteredLocalDebots.map((debot, index) => (\n\t\t<DebotListItem\n\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\tdebot={debot}\n\t\t\tkey={`${debot.address}-${index}`}\n\t\t/>\n\t));\n\tconst debotsListClassName = `debots-list__list ${isCustomScrollBar() ? 'with-custom-scrollbar' : ''}`;\n\n\treturn (\n\t\t<div className='debots-list'>\n\t\t\t<div className='debots-list__controls'>\n\t\t\t\t<ControlWithPopup height={310} width={500} name='Add DeBot'>\n\t\t\t\t\t<AddDebot />\n\t\t\t\t</ControlWithPopup>\n\t\t\t\t<ControlWithPopup height={472} width={660} name='Show Environment'>\n\t\t\t\t\t<Environment />\n\t\t\t\t</ControlWithPopup>\n\t\t\t</div>\n\t\t\t<div className={debotsListClassName}>\n\t\t\t\t{!!filteredLocalDebots.length\n\t\t\t\t\t&& <Fragment>\n\t\t\t\t\t\t<div className='debots-list__section-title'>Your saved DeBots</div>\n\t\t\t\t\t\t{renderLocalDebotListItems()}\n\t\t\t\t\t</Fragment>\n\t\t\t\t}\n\t\t\t\t{!!filteredDebots.length\n\t\t\t\t\t&& <Fragment>\n\t\t\t\t\t\t<div className='debots-list__section-title'>Suggested DeBots</div>\n\t\t\t\t\t\t{renderDebotListItems()}\n\t\t\t\t\t</Fragment>\n\t\t\t\t}\n\t\t\t\t{(!filteredDebots.length && !filteredLocalDebots.length) && <Loader isFailed />}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default DebotsList;\n","import React, { useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst Text = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { text, functionId, interfaceAddress, isError } = params;\n\n\tuseEffect(() => {\n\t\tconst runDebotFunction = async () => {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\n\t\trunDebotFunction();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst textClassName = `stage-component__text ${isError ? 'stage-component__text--error' : ''}`;\n\n\treturn (\n\t\t<div className={textClassName}>\n\t\t\t{text}\n\t\t</div>\n\t)\n};\n\nexport default Text;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDebotAddress, encodeString, getEnvVariableFromInput } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst Input = ({\n\tparams,\n\ttype = 'text',\n\tisMultiline = false,\n\tcustomCallback,\n\tcustomErrorText,\n\tsetCustomErrorText,\n}) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst inputRef = useRef(null);\n\tconst { text, interfaceAddress, functionId } = params;\n\n\tuseEffect(() => {\n\t\tinputRef?.current?.focus();\n\t}, []);\n\n\tconst handleInputChange = event => {\n\t\tsetInputValue(event.target.value);\n\t\tsetErrorText('');\n\n\t\tif (setCustomErrorText)\n\t\t\tsetCustomErrorText('');\n\t}\n\n\tconst handleSend = async () => {\n\t\tif (errorText || customErrorText || !inputValue)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tif (customCallback)\n\t\t\t\treturn customCallback(inputValue);\n\n\t\t\tconst value = getEnvVariableFromInput(inputValue) || inputValue;\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: encodeString(value) });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst isSendKeyPressed = isEnter && !shiftKey && !altKey;\n\n\t\tif (isSendKeyPressed) {\n\t\t\tevent.preventDefault();\n\n\t\t\thandleSend();\n\t\t}\n\t}\n\n\tconst inputClassName = `stage-component__input ${errorText || customErrorText ? 'stage-component__input--error' : ''}`;\n\n\treturn (\n\t\t<div className='stage-component__input-container'>\n\t\t\t{!!text && <span className='stage-component__input-label'>{text}</span>}\n\t\t\t<div className='stage-component__input-flex'>\n\t\t\t\t{isMultiline\n\t\t\t\t\t? <textarea\n\t\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t: <input\n\t\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<div className='stage-component__input-send-button' onClick={handleSend}>Send</div>\n\t\t\t</div>\n\t\t\t{!!errorText && <span className='stage-component__input-error'>{errorText}</span>}\n\t\t\t{!!customErrorText && <span className='stage-component__input-error'>{customErrorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default Input;\n","import React from 'react';\nimport Input from '../Input';\n\nconst Textarea = ({ params, type = 'text' }) => {\n\treturn <Input\n\t\tparams={params}\n\t\ttype={type}\n\t\tisMultiline={true}\n\t/>\n};\n\nexport default Textarea;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\n\nconst normalizeValue = (value, power) => {\n\tif (!power || power === \"0\")\n\t\treturn value;\n\n\tconst numPower = parseInt(power);\n\n\treturn (parseFloat(value) * Math.pow(10, numPower)).toString();\n}\n\nfunction formStepFromDecimals(decimals) {\n\tif (!decimals || decimals === \"0\")\n\t\treturn '1';\n\n\tconst decimalsInt = parseInt(decimals, 10);\n\tlet resultString = '0.';\n\n\tfor(let i = 1; i < decimalsInt; i++) {\n\t\tresultString += '0';\n\t}\n\n\tresultString += '1';\n\n\treturn resultString;\n}\n\nfunction formDescription(config) {\n\tif (config.min && config.max)\n\t\treturn `Input value must be greater than (or equal) ${config.min} and less than (or equal) ${config.max}`;\n\telse if (config.min)\n\t\treturn `Input value must be greater than (or equal) ${config.min}`;\n\telse if (config.max)\n\t\treturn `Input value must be less than (or equal) ${config.max}`;\n\telse\n\t\treturn false;\n}\n\nconst AmountInput = ({\n\tparams,\n\tcustomCallback,\n\tcustomErrorText,\n\tsetCustomErrorText,\n}) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst inputRef = useRef(null);\n\tconst { text, functionId, interfaceAddress, config = {} } = params;\n\tconst inputConfig = {\n\t\tmin: config.min,\n\t\tmax: config.max,\n\t\tstep: formStepFromDecimals(config.decimals),\n\t};\n\tconst description = formDescription(config);\n\n\tuseEffect(() => {\n\t\tinputRef?.current?.focus();\n\t}, []);\n\n\tconst handleInputChange = event => {\n\t\tconst { value } = event.target;\n\t\t\n\t\tif (value === '') {\n\t\t\tsetInputValue(event.target.value);\n\t\t\tsetErrorText('');\n\n\t\t\tif (setCustomErrorText)\n\t\t\t\tsetCustomErrorText('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!config.decimals || config.decimals === \"0\") {\n\t\t\tif (value.includes('.')) {\n\t\t\t\tsetErrorText('This input does not support decimals');\n\t\t\t\tsetInputValue(event.target.value);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tconst [, decimalsString] = value.split('.');\n\n\t\t\tif (decimalsString && parseInt(config.decimals) < decimalsString.length) {\n\t\t\t\tsetErrorText('Too many decimals');\n\t\t\t\tsetInputValue(event.target.value);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst floatValue = parseFloat(value);\n\t\tconst isOutOfRange = (config.max && floatValue > config.max) || (config.min && floatValue < config.min);\n\n\t\tif (value.includes('e')) {\n\t\t\tsetErrorText('Input includes not valid characters');\n\t\t} else if (isOutOfRange) {\n\t\t\tsetErrorText(description);\n\t\t} else {\n\t\t\tsetErrorText('');\n\n\t\t\tif (setCustomErrorText)\n\t\t\t\tsetCustomErrorText('');\n\t\t}\n\n\t\tsetInputValue(event.target.value);\n\t}\n\n\tconst handleSend = async () => {\n\t\tif (errorText || customErrorText || !inputValue)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tif (customCallback)\n\t\t\t\treturn customCallback(inputValue);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: normalizeValue(inputValue, config.decimals) });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldTriggerFunction = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldTriggerFunction) {\n\t\t\tevent.preventDefault();\n\n\t\t\thandleSend();\n\t\t}\n\t}\n\n\tconst inputClassName = `stage-component__input ${errorText ? 'stage-component__input--error' : ''}`;\n\n\treturn (\n\t\t<div className='stage-component__input-container'>\n\t\t\t{!!text && <span className='stage-component__input-label'>{text}</span>}\n\t\t\t{!!description && <div className='stage-component__input-description'>{description}</div>}\n\t\t\t<div className='stage-component__input-flex'>\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\t{...inputConfig}\n\t\t\t\t/>\n\t\t\t\t<div className='stage-component__input-send-button' onClick={handleSend}>Send</div>\n\t\t\t</div>\n\t\t\t{!!errorText && <span className='stage-component__input-error'>{errorText}</span>}\n\t\t\t{!!customErrorText && <span className='stage-component__input-error'>{customErrorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default AmountInput;\n","import React from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst ConfirmInput = ({ params = {}, approveCallback }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { functionId, interfaceAddress, text } = params;\n\n\tconst handleConfirm = async value => {\n\t\ttry {\n\t\t\tif (approveCallback)\n\t\t\t\treturn approveCallback(value);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value });\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='stage-component__confirm-input-container'>\n\t\t\t{!!text && <div className='stage-component__confirm-input-label'>{text}</div>}\n\t\t\t<div\n\t\t\t\tonClick={() => handleConfirm(true)}\n\t\t\t\tclassName='stage-component__confirm-input-button'\n\t\t\t>\n\t\t\t\tConfirm\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tonClick={() => handleConfirm(false)}\n\t\t\t\tclassName='stage-component__confirm-input-button stage-component__confirm-input-button--decline'\n\t\t\t>\n\t\t\t\tDecline\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default ConfirmInput;\n","import React, { useState } from 'react';\nimport { useDebotAddress, checkIsValidAddress, getEnvVariableFromInput } from 'src/helpers';\nimport { Input } from '../';\nimport { DEngine } from 'src/debot';\n\nconst AddressInput = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst { interfaceAddress, functionId } = params;\n\n\tconst handleSubmit = async inputValue => {\n\t\ttry {\n\t\t\tconst value = getEnvVariableFromInput(inputValue) || inputValue;\n\n\t\t\tconst isValidAddress = await checkIsValidAddress(value);\n\n\t\t\tif (!isValidAddress)\n\t\t\t\treturn setErrorText('Invalid address');\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\treturn <Input\n\t\tcustomCallback={handleSubmit}\n\t\tcustomErrorText={errorText}\n\t\tsetCustomErrorText={setErrorText}\n\t\tparams={params}\n\t/>\n};\n\nexport default AddressInput;\n","import React, { useState } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport { AmountInput } from '../';\n\nconst NANO_MODIFIER = 1000000000;\n\nconst convertToNanotokens = tokens => (parseFloat(tokens) * NANO_MODIFIER).toString();\n\nconst TokensInput = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst { functionId, interfaceAddress } = params;\n\n\tconst handleSubmit = async inputValue => {\n\t\ttry {\n\t\t\tconst nanotokens = convertToNanotokens(inputValue);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: nanotokens });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\treturn (\n\t\t<AmountInput\n\t\t\tparams={params}\n\t\t\tcustomCallback={handleSubmit}\n\t\t\tcustomErrorText={errorText}\n\t\t\tsetCustomErrorText={setErrorText}\n\t\t/>\n\t)\n};\n\nexport default TokensInput;\n","import React, { useState, useLayoutEffect, useCallback } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst MAX_ITEMS = 8;\n\nconst Menu = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst [menuItemsToRender, setMenuItemsToRender] = useState(false);\n\tconst [isShowAllMenuItems, setIsShowAllMenuItems] = useState(false);\n\tconst { text, title, interfaceAddress, menuItems } = params;\n\n\tconst handleSelectItem = useCallback(async (selectedItem, index) => {\n\t\ttry {\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, selectedItem.functionId, { index });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}, [debotAddress, interfaceAddress]);\n\n\tuseLayoutEffect(() => {\n\t\tlet itemsToRender = menuItems.map((item, index) => {\n\t\t\tlet menuName = item.title;\n\t\n\t\t\tif (item.description)\n\t\t\t\tmenuName += ` (${item.description})`;\n\t\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => handleSelectItem(item, index)}\n\t\t\t\t\tkey={`${item.functionId}-${index}`}\n\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t>\n\t\t\t\t\t{menuName}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tif (itemsToRender.length > MAX_ITEMS) {\n\t\t\tif (isShowAllMenuItems) {\n\t\t\t\titemsToRender.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => setIsShowAllMenuItems(false)}\n\t\t\t\t\t\tkey='hide-btn'\n\t\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t\t>\n\t\t\t\t\t\t{'Hide'}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\titemsToRender = itemsToRender.slice(0, MAX_ITEMS);\n\n\t\t\t\titemsToRender.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => setIsShowAllMenuItems(true)}\n\t\t\t\t\t\tkey='show-more-btn'\n\t\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t\t>\n\t\t\t\t\t\t{'Show more'}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tsetMenuItemsToRender(itemsToRender);\n\t}, [menuItems, handleSelectItem, isShowAllMenuItems]);\n\n\treturn (\n\t\t<div className='stage-component__menu-container'>\n\t\t\t<div className='stage-component__menu-title'>{title}</div>\n\t\t\t<div className='stage-component__menu-description'>{text}</div>\n\t\t\t<div className='stage-component__menu-list'>\n\t\t\t\t{menuItemsToRender}\n\t\t\t</div>\n\t\t\t{errorText && <span className='stage-component__menu-error'>{errorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default Menu;\n","import React, { useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\n\nconst Stdout = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { text, interfaceAddress } = params;\n\n\tuseEffect(() => {\n\t\tconst runDebotFunction = async () => {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\n\t\trunDebotFunction();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<div className='stage-component__text'>\n\t\t\t{text}\n\t\t</div>\n\t)\n};\n\nexport default Stdout;\n","import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { COMPONENTS_BINDINGS } from 'src/constants';\nimport { isCustomScrollBar } from 'src/helpers';\nimport { Loader } from 'src/components';\nimport {\n\tText,\n\tStdout,\n\tInput,\n\tAddressInput,\n\tTextarea,\n\tAmountInput,\n\tConfirmInput,\n\tTokensInput,\n\tMenu,\n} from './StageComponents';\nimport './index.scss';\n\nclass Stage extends Component {\n\tstageRef = createRef(null);\n\n\tstageComponents = {\n\t\t[COMPONENTS_BINDINGS.INPUT]: Input,\n\t\t[COMPONENTS_BINDINGS.TEXTAREA]: Textarea,\n\t\t[COMPONENTS_BINDINGS.AMOUNT_INPUT]: AmountInput,\n\t\t[COMPONENTS_BINDINGS.CONFIRM_INPUT]: ConfirmInput,\n\t\t[COMPONENTS_BINDINGS.ADDRESS_INPUT]: AddressInput,\n\t\t[COMPONENTS_BINDINGS.TOKENS_INPUT]: TokensInput,\n\t\t[COMPONENTS_BINDINGS.TEXT]: Text,\n\t\t[COMPONENTS_BINDINGS.STDOUT]: Stdout,\n\t\t[COMPONENTS_BINDINGS.MENU]: Menu,\n\t}\n\n\tformStageComponents = () => {\n\t\tconst { stage } = this.props;\n\n\t\treturn stage.map((stageItem, index) => {\n\t\t\tconst Component = this.stageComponents[stageItem.component];\n\n\t\t\treturn <Component key={`${stageItem.functionId}-${index}`} params={stageItem} />\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.stage.length !== this.props.stage.length) {\n\t\t\tif (this.stageRef?.current)\n\t\t\t\tsetTimeout(() => this.stageRef.current.scrollTop = this.stageRef.current.scrollHeight, 0);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { stage, isDebotError } = this.props;\n\n\t\tif (!stage.length) {\n\t\t\treturn <Loader isFailed={isDebotError} />\n\t\t}\n\n\t\tconst stageComponents = this.formStageComponents();\n\n\t\tconst stageClassName = `stage ${isCustomScrollBar() ? 'with-custom-scrollbar' : ''}`;\n\n\t\treturn (\n\t\t\t<div ref={this.stageRef} className={stageClassName}>\n\t\t\t\t<div className='stage__container'>\n\t\t\t\t\t{stageComponents}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = ({ debot: { stage } }) => ({ stage });\n\nexport default connect(mapStateToProps)(Stage);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { DEngine } from 'src/debot';\nimport { useDebotAddress, removeLocalDebot } from 'src/helpers';\nimport { clearStage } from 'src/store/actions/debot';\nimport { SigningBox, ApproveWindow, ControlWithPopup, AddDebot, Environment } from 'src/components';\nimport Stage from './Stage';\nimport './index.scss';\n\nconst DebotPage = () => {\n\tconst dispatch = useDispatch();\n\tconst debotAddress = useDebotAddress();\n\tconst [isDebotError, setIsDebotError] = useState(false);\n\tconst isSigningBoxVisible = useSelector(state => !!state.debot.signingBox);\n\tconst isApproveWindowVisible = useSelector(state => !!state.debot.approveWindow);\n\tconst isDebotSaved = useSelector(state => !!state.debot.localDebotsList.find(debot => debot.address === debotAddress));\n\n\tuseEffect(() => {\n\t\tconst asyncEffect = async () => {\n\t\t\tif (debotAddress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait DEngine.runDebot(debotAddress);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tsetIsDebotError(true);\n\t\t\t\t\tconsole.error('Error while running debot: ', err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tasyncEffect();\n\n\t\treturn () => {\n\t\t\tdispatch(clearStage());\n\t\t}\n\t}, [debotAddress, dispatch]);\n\n\tif (!debotAddress)\n\t\treturn <Redirect to='/' />\n\n\tconst restartDebot = async () => {\n\t\ttry {\n\t\t\tawait DEngine.reloadDebot(debotAddress);\n\t\t} catch (err) {\n\t\t\tsetIsDebotError(true);\n\t\t\tconsole.error('Error while running debot: ', err);\n\t\t}\n\t}\n\n\tconst isScrollDisabled = isSigningBoxVisible || isApproveWindowVisible;\n\tconst pageClassName = `debot-page ${isScrollDisabled ? 'debot-page--scroll-disabled' : ''}`;\n\n\treturn (\n\t\t<div className={pageClassName}>\n\t\t\t<div className='debot-page__controls'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='debot-page__controls-item'\n\t\t\t\t\tonClick={restartDebot}\n\t\t\t\t>\n\t\t\t\t\tRestart DeBot\n\t\t\t\t</div>\n\t\t\t\t{isDebotSaved\n\t\t\t\t\t? <div\n\t\t\t\t\t\tclassName='debot-page__controls-item'\n\t\t\t\t\t\tonClick={() => removeLocalDebot(debotAddress)}\n\t\t\t\t\t>\n\t\t\t\t\t\tRemove from Saved\n\t\t\t\t\t</div>\n\t\t\t\t\t: <ControlWithPopup height={310} width={500} name='Save DeBot'>\n\t\t\t\t\t\t<AddDebot prefilledAddress={debotAddress} />\n\t\t\t\t\t</ControlWithPopup>\n\t\t\t\t}\n\t\t\t\t<ControlWithPopup height={472} width={650} name='Show Environment'>\n\t\t\t\t\t<Environment />\n\t\t\t\t</ControlWithPopup>\n\t\t\t</div>\n\t\t\t<Stage isDebotError={isDebotError} />\n\t\t\t{isSigningBoxVisible && <SigningBox />}\n\t\t\t{isApproveWindowVisible && <ApproveWindow />}\n\t\t</div>\n\t)\n}\n\nexport default DebotPage;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { genKeyPairFromMnemonic } from 'src/helpers';\nimport './index.scss';\n\nconst SigningBox = () => {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst [isDropable, setIsDropable] = useState(false);\n\tconst [isUploadError, setIsUploadError] = useState(false);\n\tconst signingBox = useSelector(state => state.debot.signingBox);\n\n\tconst handleChangeInput = e => {\n\t\tsetInputValue(e.target.value);\n\t\tsetErrorText('');\n\t};\n\n\tconst submitInput = async event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSubmit = isEnter && !shiftKey && !altKey && inputValue;\n\n\t\tif (!shouldSubmit)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tconst keyPair = await genKeyPairFromMnemonic(inputValue);\n\n\t\t\tsigningBox.submit(keyPair);\n\t\t} catch(err) {\n\t\t\tconsole.error('Error when getting keys from mnemonic: ', err);\n\t\t\tsetErrorText('Error when getting keys from secret phrase');\n\t\t}\n\t}\n\n\tconst preventEvent = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\n\tconst handleDragEnter = e => {\n\t\tpreventEvent(e);\n\t\tsetIsDropable(true);\n\t};\n\n\tconst handleDragLeave = e => {\n\t\tpreventEvent(e)\n\t\tsetIsDropable(false);\n\t};\n\n\tconst handleDrop = e => {\n\t\tpreventEvent(e);\n\t\tsetIsDropable(false);\n\t\tsetIsUploadError(false);\n\t\tconst { files } = e.dataTransfer;\n\n\t\tif (files && files.length > 1)\n\t\t\treturn setIsUploadError(true);\n\n\t\tconst reader = new FileReader();\n\n\t\treader.onabort = () => setIsUploadError(true);\n\n\t\treader.onerror = () => setIsUploadError(true);\n\n\t\treader.onload = e => {\n\t\t\ttry {\n\t\t\t\tconst { result } = e.target;\n\t\n\t\t\t\tconst keyPair = JSON.parse(result);\n\n\t\t\t\tsigningBox.submit(keyPair);\n\t\t\t\tsetIsUploadError(false);\n\t\t\t} catch(err) {\n\t\t\t\tsetIsUploadError(true);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsText(files[0]);\n\t};\n\n\treturn (\n\t\t<div className='signing-box'>\n\t\t\t<div className='signing-box__container'>\n\t\t\t\t<div className='signing-box__header'>\n\t\t\t\t\tSigning Box\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__description'>\n\t\t\t\t\tWe <b>DON'T</b> store your keys or seed phrase.\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__input-container'>\n\t\t\t\t\t<div className='signing-box__input-label'>Enter seed phrase:</div>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName={`signing-box__input ${errorText ? 'signing-box__input--error' : ''}`}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tonKeyPress={submitInput}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t{errorText && <span className='signing-box__input-error'>{errorText}</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__devider'>\n\t\t\t\t\tOR\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`signing-box__upload-keys ${isDropable ? 'signing-box__upload-keys--dropable' : ''}`}\n\t\t\t\t\tonDragEnter={handleDragEnter}\n\t\t\t\t\tonDrop={handleDrop}\n\t\t\t\t\tonDragOver={preventEvent}\n\t\t\t\t>\n\t\t\t\t\t<input type=\"file\" id=\"upload-input\" hidden />\n\t\t\t\t\t<label htmlFor=\"upload-input\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='/uploadKeys.jpg'\n\t\t\t\t\t\t\talt='Click here to upload'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tUpload keypair file\n\t\t\t\t\t</label>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`signing-box__upload-keys-dropable-overlay ${isDropable ? 'signing-box__upload-keys-dropable-overlay--active' : ''}`}\n\t\t\t\t\t\tonDragLeave={handleDragLeave}\n\t\t\t\t\t></div>\n\t\t\t\t\t{isUploadError && <span className='signing-box__upload-keys--error'>Not recognized</span>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SigningBox;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ConfirmInput } from 'src/components/DebotPage/Stage/StageComponents';\nimport { createExplorerUrl } from 'src/helpers';\nimport './index.scss';\n\nconst convertFromNano = value => value / 1000000000;\n\nconst ApproveWindow = () => {\n\tconst approveWindow = useSelector(state => state.debot.approveWindow);\n\n\tconst handleApprove = isApproved => approveWindow.submit(isApproved);\n\n\tconst { dst, fee, out, setcode, signkey } = approveWindow.params;\n\tconst hasOutgoingTransfers = !!out.length;\n\n\treturn (\n\t\t<div className='approve-window'>\n\t\t\t<div className='approve-window__container'>\n\t\t\t\t<div className='approve-window__header'>\n\t\t\t\t\tPermission Request \n\t\t\t\t</div>\n\t\t\t\t<div className='approve-window__description'>\n\t\t\t\t\tDeBot is going to create an onchain transaction:\n\t\t\t\t</div>\n\t\t\t\t<div className='approve-window__details'>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tAccount:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t<a href={createExplorerUrl(dst)} target=\"_blank\" rel=\"noreferrer\">{dst}</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tTransaction fees:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t{convertFromNano(fee)} tokens\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tMessage signer public key:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t{signkey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{hasOutgoingTransfers\n\t\t\t\t\t? <div className='approve-window__details-description'>\n\t\t\t\t\t\tOutgoing transfers from account:\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div className='approve-window__details-description'>\n\t\t\t\t\t\tNo outgoing transfers.\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{hasOutgoingTransfers\n\t\t\t\t\t&& <div className='approve-window__transfers'>\n\t\t\t\t\t\t<div className='approve-window__transfers-row'>\n\t\t\t\t\t\t\t<div className='approve-window__transfers-col approve-window__transfers-col--title'>\n\t\t\t\t\t\t\t\tRecipient\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='approve-window__transfers-col approve-window__transfers-col--title'>\n\t\t\t\t\t\t\t\tAmount\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{out.map((spending, index) => {\n\t\t\t\t\t\t\tconst recipient = spending.recipient || spending.dst;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={`${recipient}-${index}`} className='approve-window__transfers-row'>\n\t\t\t\t\t\t\t\t\t<div className='approve-window__transfers-col'>\n\t\t\t\t\t\t\t\t\t\t<a href={createExplorerUrl(recipient)} target=\"_blank\" rel=\"noreferrer\">{recipient}</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='approve-window__transfers-col'>\n\t\t\t\t\t\t\t\t\t\t{convertFromNano(spending.amount)} tokens\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{!!setcode\n\t\t\t\t\t&& <div className='approve-window__details-description approve-window__details-description--warning'>\n\t\t\t\t\t\tWarning: the transaction will change the account smart contract code!\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<div className='approve-window__confirm'>\n\t\t\t\t\t<ConfirmInput approveCallback={handleApprove} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ApproveWindow;\n","import React from 'react';\n\nconst ControlWithPopupContext = React.createContext(null);\n\nexport default ControlWithPopupContext;\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport tonClientController from 'src/tonClient';\nimport { addLocalDebot } from 'src/helpers';\nimport { ControlWithPopupContext } from 'src/contexts';\nimport { OptionsList } from 'src/components';\nimport { MainNetIcon, DevNetIcon } from 'src/components/icons';\nimport { MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\nimport './index.scss';\n\nconst AddDebot = ({ prefilledAddress = '' }) => {\n\tconst popupContext = useContext(ControlWithPopupContext);\n\tconst [debotName, setDebotName] = useState('');\n\tconst [debotAddress, setDebotAddress] = useState(prefilledAddress);\n\tconst [selectedNetwork, setSelectedNetwork] = useState(tonClientController.selectedNetwork);\n\n\tconst handleAddressChange = e => setDebotAddress(e.target.value);\n\n\tconst handleLabelChange = e => setDebotName(e.target.value);\n\n\tconst handleAddDebot = useCallback(() => {\n\t\tif (debotName && debotAddress) {\n\t\t\tconst debotObj = {\n\t\t\t\ttitle: debotName,\n\t\t\t\taddress: debotAddress,\n\t\t\t\tnetwork: selectedNetwork,\n\t\t\t}\n\n\t\t\taddLocalDebot(debotObj);\n\n\t\t\tif (popupContext)\n\t\t\t\tpopupContext.closePopup();\n\t\t}\n\t}, [debotAddress, debotName, popupContext, selectedNetwork]);\n\n\tconst handlePressOnEnter = useCallback(event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldHandle = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldHandle)\n\t\t\thandleAddDebot();\n\t}, [handleAddDebot]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keypress', handlePressOnEnter);\n\n\t\treturn () => document.removeEventListener('keypress', handlePressOnEnter)\n\t}, [handlePressOnEnter]);\n\n\tconst renderSelectedItem = () => (\n\t\t<div className='options-list__selected-item'>\n\t\t\t{selectedNetwork === DEV_NETWORK ? <DevNetIcon /> : <MainNetIcon />}\n\t\t\t{selectedNetwork}\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<div className='add-debot'>\n\t\t\t<div className='add-debot__horizontal-inputs'>\n\t\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t\t<span className='stage-component__input-label'>DeBot name</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={debotName}\n\t\t\t\t\t\tonChange={handleLabelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<OptionsList selectedItem={renderSelectedItem()} height={84} width={200}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => setSelectedNetwork(MAIN_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MainNetIcon />\n\t\t\t\t\t\t{MAIN_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => setSelectedNetwork(DEV_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DevNetIcon />\n\t\t\t\t\t\t{DEV_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t</OptionsList>\n\t\t\t</div>\n\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t<span className='stage-component__input-label'>DeBot address</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\tvalue={debotAddress}\n\t\t\t\t\tonChange={handleAddressChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div onClick={handleAddDebot} className='add-debot__submit-button'>Add to list</div>\n\t\t</div>\n\t);\n}\n\nexport default AddDebot;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { addEnvVariable, removeEnvVariable, isCustomScrollBar } from 'src/helpers';\nimport { CancelIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst Environment = () => {\n\tconst envVariables = useSelector(state => state.environment.variables);\n\tconst envEntries = Object.entries(envVariables);\n\tconst [envKey, setEnvKey] = useState('');\n\tconst [envValue, setEnvValue] = useState('');\n\tconst [isCopiedVisible, setIsCopiedVisible] = useState(false);\n\n\tconst handleKeyChange = e => setEnvKey(e.target.value);\n\n\tconst handleValueChange = e => setEnvValue(e.target.value);\n\n\tconst handleAddVariable = useCallback(() => {\n\t\tif (envKey && envValue) {\n\t\t\taddEnvVariable(envKey, envValue);\n\t\t\tsetEnvKey('');\n\t\t\tsetEnvValue('');\n\t\t}\n\t}, [envKey, envValue]);\n\n\tconst handleRemoveVariable = (e, key) => {\n\t\te.stopPropagation();\n\t\t\n\t\tremoveEnvVariable(key);\n\t}\n\n\tconst handlePressOnEnter = useCallback(event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldHandle = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldHandle)\n\t\t\thandleAddVariable();\n\t}, [handleAddVariable]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keypress', handlePressOnEnter);\n\n\t\treturn () => document.removeEventListener('keypress', handlePressOnEnter)\n\t}, [handlePressOnEnter]);\n\n\tconst copyToClipboard = async value => {\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(value);\n\n\t\t\tsetIsCopiedVisible(true);\n\n\t\t\tsetTimeout(() => setIsCopiedVisible(false), 2000);\n\t\t} catch(err) {\n\t\t\tconsole.error('Clipboard API not supported');\n\t\t}\n\t}\n\n\tconst renderVariablesTableItems = () => envEntries.map(([key, value]) => (\n\t\t<div key={key} className='environment__table-row'>\n\t\t\t<div className='environment__table-col environment__table-col--cancel'>\n\t\t\t\t<CancelIcon onClick={e => handleRemoveVariable(e, key)}/>\n\t\t\t</div>\n\t\t\t<div className='environment__table-col environment__table-col--title'>{key}</div>\n\t\t\t<div className='environment__table-col environment__table-col--clickable' onClick={() => copyToClipboard(value)}>{value}</div>\n\t\t</div>\n\t));\n\n\tconst copiedIndicatorClassName = `environment__copied-indicator ${isCopiedVisible ? 'environment__copied-indicator--visible' : ''}`;\n\n\treturn (\n\t\t<div className='environment'>\n\t\t\t<div className={`environment__table--wrapper ${isCustomScrollBar() ? 'with-custom-scrollbar' : ''}`}>\n\t\t\t\t{envEntries.length\n\t\t\t\t\t? <div className='environment__table'>\n\t\t\t\t\t\t{renderVariablesTableItems()}\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div className='environment__image'>\n\t\t\t\t\t\t<div className='environment__image-text'>\n\t\t\t\t\t\t\tHere you can store something to use later (address or public key, for example).\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='environment__image--flex-container'>\n\t\t\t\t\t\t\t<img src='/env-icon.svg' alt='Environment'/>\n\t\t\t\t\t\t\t<div className='environment__image-text'>\n\t\t\t\t\t\t\t\tYou can access stored data as variables in inputs by adding the '$' prefix to key, or copy data to the clipboard by click on it.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='environment__image-text environment__image-text--warning'>\n\t\t\t\t\t\t\tThis storage is not encrypted, so you should not store private keys or seed-phrase here.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className='environment__input-container'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Key'\n\t\t\t\t\tvalue={envKey}\n\t\t\t\t\tonChange={handleKeyChange}\n\t\t\t\t/>\n\t\t\t\t<span className='environment__divider'>:</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Value'\n\t\t\t\t\tvalue={envValue}\n\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='environment__footer'>\n\t\t\t\t<div className={copiedIndicatorClassName}>Copied to clipboard!</div>\n\t\t\t\t<div onClick={handleAddVariable} className='environment__submit-button'>Add variable</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Environment;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ControlWithPopupContext } from 'src/contexts';\nimport './index.scss';\n\nconst DEFAULT_WIDTH = 460;\nconst DEFAULT_HEIGHT = 252;\n\nconst ControlWithPopup = ({ children, name, height = DEFAULT_HEIGHT, width = DEFAULT_WIDTH }) => {\n\tconst containerRef = useRef(null);\n\tconst [isControlOpen, setIsControlOpen] = useState(false);\n\n\tconst closePopup = () => setIsControlOpen(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tconst shouldHandleClick = isControlOpen\n\t\t\t&& containerRef?.current\n\t\t\t&& !containerRef.current.contains(event.target);\n\n\t\tif (shouldHandleClick)\n\t\t\tclosePopup();\n\t}, [isControlOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst containerClassName = `control-with-popup__container ${isControlOpen\n\t\t? 'control-with-popup__container--visible' : ''\n\t}`;\n\n\tconst switcherBlockClassName = `control-with-popup ${isControlOpen\n\t\t? 'control-with-popup--active' : ''\n\t}`;\n\n\tconst containerStyles = {\n\t\t'--height': `${height}px`,\n\t\t'--width': `${width}px`,\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={switcherBlockClassName}\n\t\t>\n\t\t\t<div\n\t\t\t\tonClick={() => setIsControlOpen(!isControlOpen)}\n\t\t\t\tclassName='control-with-popup__label'\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={containerClassName}\n\t\t\t\tstyle={containerStyles}\n\t\t\t>\n\t\t\t\t<ControlWithPopupContext.Provider value={{ closePopup }}>\n\t\t\t\t\t{isControlOpen && children}\n\t\t\t\t</ControlWithPopupContext.Provider>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ControlWithPopup;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ArrowIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst DEFAULT_HEIGHT = 252;\nconst DEFAULT_WIDTH = 245;\n\nconst OptionsList = ({ children, selectedItem, height = DEFAULT_HEIGHT, width = DEFAULT_WIDTH, isDisabled }) => {\n\tconst switcherBlockRef = useRef(null);\n\tconst [isListOpen, setIsListOpen] = useState(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tif (!switcherBlockRef?.current?.contains(event.target) && isListOpen)\n\t\t\tsetIsListOpen(false);\n\t}, [isListOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst listClassName = `options-list__list ${isListOpen\n\t\t? 'options-list__list--visible' : ''\n\t}`;\n\n\tconst switcherBlockClassName = `options-list ${isListOpen\n\t\t? 'options-list--active' : ''\n\t} ${isDisabled ? 'options-list--disabled' : ''}`;\n\n\treturn (\n\t\t<div\n\t\t\tref={switcherBlockRef}\n\t\t\tonClick={() => !isDisabled && setIsListOpen(!isListOpen)}\n\t\t\tclassName={switcherBlockClassName}\n\t\t\tstyle={{ '--width': `${width}px` }}\n\t\t>\n\t\t\t{selectedItem}\n\t\t\t<ArrowIcon />\n\t\t\t<div\n\t\t\t\tclassName={listClassName}\n\t\t\t\tstyle={{ '--height': `${height}px` }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default OptionsList;\n","import React from 'react';\nimport './index.scss';\n\nconst Loader = ({ isFailed }) => {\n\tconst imgSrc = isFailed ? '/load-failed.png' : '/loader.gif';\n\tconst imgAlt = isFailed ? 'Nothing here :(' : 'Loading...';\n\n\treturn (\n\t\t<div className='loader'>\n\t\t\t<img className='loader__cat' src={imgSrc} alt={imgAlt} />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport store from 'src/store'\nimport { App } from 'src/components';\nimport { isCustomScrollBar } from 'src/helpers';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport 'src/styles/index.scss';\n\nrequire('dotenv').config();\n\nif (isCustomScrollBar()) {\n\tdocument.querySelector('body')?.classList.add('with-custom-scrollbar');\n}\n\nconst routerParams = {};\n\nif (process.env.REACT_APP_ROUTER_BASENAME)\n\trouterParams.basename = `/${process.env.REACT_APP_ROUTER_BASENAME}`;\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter { ...routerParams }>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}