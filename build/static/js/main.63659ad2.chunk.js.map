{"version":3,"sources":["constants/index.js","helpers/decodeString.js","store/actions/debot.js","store/reducers/debot.js","store/actions/environment.js","store/reducers/environment.js","store/reducers/index.js","store/index.js","components/App/index.js","components/icons/LensIcon.js","components/icons/ArrowIcon.js","components/icons/BackIcon.js","components/icons/CancelIcon.js","components/icons/DevNetIcon.js","components/icons/MainNetIcon.js","helpers/addLocalDebot.js","helpers/addEnvVariable.js","helpers/encodeString.js","helpers/createDebotUrl.js","helpers/createExplorerUrl.js","tonClient.js","helpers/checkIsValidAddress.js","helpers/formDebotFunctionFromId.js","helpers/genKeyPairFromMnemonic.js","helpers/getEnvVariableFromInput.js","helpers/removeLocalDebot.js","helpers/removeEnvVariable.js","helpers/isCustomScrollBar.js","helpers/hooks/useSearchParams.js","helpers/hooks/useDebotAddress.js","components/SearchBar/index.js","components/Header/index.js","components/DebotsList/ListItem.js","components/DebotsList/index.js","debot/ABIs/terminal.abi.js","debot/ABIs/menu.abi.js","debot/ABIs/amount_input.abi.js","debot/ABIs/confirm_input.abi.js","debot/ABIs/address_input.abi.js","debot/ABIs/number_input.abi.js","debot/ABIs/echo.abi.js","debot/ABIs/stdout.abi.js","debot/interfaces/terminal.js","debot/interfaces/menu.js","debot/interfaces/amount_input.js","debot/interfaces/confirm_input.js","debot/interfaces/address_input.js","debot/interfaces/number_input.js","debot/interfaces/echo.js","debot/interfaces/stdout.js","debot/interfaces/index.js","debot/DebotBrowser.js","debot/DEngine.js","components/DebotPage/Stage/StageComponents/Text/index.js","components/DebotPage/Stage/StageComponents/Input/index.js","components/DebotPage/Stage/StageComponents/Textarea/index.js","components/DebotPage/Stage/StageComponents/AmountInput/index.js","components/DebotPage/Stage/StageComponents/ConfirmInput/index.js","components/DebotPage/Stage/StageComponents/AddressInput/index.js","components/DebotPage/Stage/StageComponents/TokensInput/index.js","components/DebotPage/Stage/StageComponents/Menu/index.js","components/DebotPage/Stage/StageComponents/Stdout/index.js","components/DebotPage/Stage/index.js","components/DebotPage/index.js","components/SigningBox/index.js","components/ApproveWindow/index.js","contexts/ControlWithPopupContext.js","components/AddDebot/index.js","components/Environment/index.js","components/ControlWithPopup/index.js","components/OptionsList/index.js","components/Loader/index.js","serviceWorkerRegistration.js","index.js"],"names":["module","exports","EXPLORER_BASE_URL","DB_CONTENT_TYPES","DEBOT","COMPONENTS_BINDINGS","TEXT","INPUT","TEXTAREA","AMOUNT_INPUT","CONFIRM_INPUT","ADDRESS_INPUT","TOKENS_INPUT","MENU","STDOUT","DEBOT_ADDRESS_SEARCH_PARAM","DEBOT_WC","MNEMONIC_WORD_COUNT","DERIVATION_PATH","USER_DEBOTS_LS_FIELD","USER_ENV_LS_FIELD","TON_NETWORK_LS_FIELD","MAIN_NETWORK","DEV_NETWORK","decodeString","encodedString","decodedString","Buffer","from","toString","console","log","PUSH_ITEM_TO_STAGE","CLEAR_STAGE","SET_SIGNING_BOX","SET_APPROVE_WINDOW","SET_DEBOTS_FILTER_KEY","SET_LOCAL_DEBOTS_LIST","pushItemToStage","item","dispatch","type","payload","clearStage","setSigningBox","signingBoxInfo","setApproveWindow","approveWindowInfo","setDebotsFilterKey","filterValue","setLocalDebotsList","debotsList","initialState","stage","signingBox","approveWindow","filterKey","title","address","network","localDebotsList","JSON","parse","localStorage","getItem","reducer","state","action","toLowerCase","SET_ENVIRONMENT_VARIABLE","setEnvironmentVariables","variables","rootReducer","combineReducers","debot","environment","middleware","thunk","composedEnhancers","compose","applyMiddleware","store","createStore","App","className","exact","path","component","DebotsList","DebotPage","LensIcon","onClick","width","height","viewBox","fill","xmlns","d","stroke","y1","x2","y2","transform","ArrowIcon","BackIcon","strokeWidth","CancelIcon","strokeLinecap","strokeLinejoin","DevNetIcon","src","alt","MainNetIcon","addLocalDebot","debotObj","localDebosFromLS","newLocalDebots","setItem","stringify","addEnvVariable","key","value","envFromLS","newEnv","encodeString","unescape","encodeURIComponent","split","map","char","charCodeAt","join","createDebotUrl","debotAddress","createExplorerUrl","addr","TonClient","useBinaryLibrary","libWeb","clientController","this","selectedNetwork","mainNetClient","server_address","devNetClient","a","tonClientController","client","utils","convert_address","output_format","result","checkIsValidAddress","formDebotFunctionFromId","id","parseInt","mnemonic","crypto","hdkey_xprv_from_mnemonic","dictionary","word_count","phrase","hdkMaster","hdkey_derive_from_xprv_path","xprv","hdkRoot","hdkey_secret_from_xprv","secret","nacl_sign_keypair_from_secret_key","keyPair","public","genKeyPairFromMnemonic","getEnvVariableFromInput","text","startsWith","varName","slice","getState","removeLocalDebot","filter","removeEnvVariable","isCustomScrollBar","navigator","platform","includes","useSearchParams","URLSearchParams","useLocation","search","useDebotAddress","get","SearchBar","history","useHistory","useDispatch","useState","inputValue","setInputValue","searchDebot","debotUrl","push","placeholder","onChange","e","target","onKeyPress","event","shiftKey","altKey","preventDefault","Header","match","useRouteMatch","to","ListItem","isGrey","linkAddress","listItemClassName","setSelectedNetwork","useSelector","filteredDebots","filteredLocalDebots","handleSelectNetwork","selectedItem","name","length","index","isFailed","TERMINAL_ABI","MENU_ABI","AMOUNT_INPUT_ABI","CONFIRM_INPUT_ABI","ADDRESS_INPUT_ABI","NUMBER_INPUT_ABI","ECHO_ABI","STDOUT_ABI","Terminal","abi","params","answerId","multiline","prompt","stageObject","functionId","interfaceAddress","config","min","decimals","message","decode_message","decodedMessage","extendedParams","inputStr","inputInt","inputTons","inputBoolean","print","Error","error","Menu","description","items","menuItems","handlerId","select","AmountInput","max","constructor","ConfirmInput","AddressInput","NumberInput","Echo","request","decodedRequest","response","DEngine","callDebotFunction","catch","err","isError","echo","Stdout","interfacesController","terminal","menu","amountInput","confirmInput","addressInput","numberInput","stdout","Map","interfaceId","_interface","call","_","DebotBrowser","debot_handle","debot_abi","info","deprecatedMessageTimeout","interfacesQueue","shift","interfaceState","InterfacesController","delegateToInterface","clearTimeout","setTimeout","loggerParams","browserParams","msg","showDeprecatedMessage","keysPromise","Promise","resolve","submit","keys","get_signing_box","handle","signing_box","boc","parse_message","parsedMessage","parsed","dst","dst_workchain_id","storage","has","debotModule","send","initDebot","approvePromise","activity","approved","dEngine","mainDebotModule","DebotModule","devDebotModule","debotBrowser","init","initParams","setDebotParams","set","browser","start","input","debotParams","functionName","call_set","function_name","encode_internal_message","src_address","encodedMessage","sendRes","releaseInterfacesQueue","clearInterfacesQueue","runDebot","Text","useEffect","runDebotFunction","textClassName","Input","isMultiline","customCallback","customErrorText","setCustomErrorText","errorText","setErrorText","inputRef","useRef","current","focus","handleInputChange","handleSend","handleKeyPress","inputClassName","ref","autoComplete","Textarea","normalizeValue","power","numPower","parseFloat","Math","pow","formStepFromDecimals","decimalsInt","resultString","i","inputConfig","step","formDescription","decimalsString","floatValue","isOutOfRange","approveCallback","handleConfirm","handleSubmit","TokensInput","nanotokens","menuItemsToRender","setMenuItemsToRender","isShowAllMenuItems","setIsShowAllMenuItems","handleSelectItem","useCallback","useLayoutEffect","itemsToRender","menuName","Stage","stageRef","createRef","stageComponents","formStageComponents","props","stageItem","Component","prevProps","scrollTop","scrollHeight","isDebotError","stageClassName","connect","setIsDebotError","isSigningBoxVisible","isApproveWindowVisible","isDebotSaved","find","asyncEffect","restartDebot","reloadDebot","pageClassName","prefilledAddress","SigningBox","isDropable","setIsDropable","isUploadError","setIsUploadError","submitInput","preventEvent","stopPropagation","onDragEnter","onDrop","files","dataTransfer","reader","FileReader","onabort","onerror","onload","readAsText","onDragOver","hidden","htmlFor","onDragLeave","convertFromNano","ApproveWindow","fee","out","setcode","signkey","hasOutgoingTransfers","href","rel","spending","recipient","amount","isApproved","ControlWithPopupContext","React","createContext","AddDebot","popupContext","useContext","debotName","setDebotName","setDebotAddress","handleAddDebot","closePopup","handlePressOnEnter","document","addEventListener","removeEventListener","Environment","envVariables","envEntries","Object","entries","envKey","setEnvKey","envValue","setEnvValue","isCopiedVisible","setIsCopiedVisible","handleAddVariable","copyToClipboard","clipboard","writeText","copiedIndicatorClassName","handleRemoveVariable","ControlWithPopup","children","containerRef","isControlOpen","setIsControlOpen","handleClickOutside","contains","containerClassName","switcherBlockClassName","containerStyles","style","Provider","OptionsList","switcherBlockRef","isListOpen","setIsListOpen","listClassName","Loader","imgSrc","imgAlt","isLocalhost","Boolean","window","location","hostname","registerValidSW","swUrl","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","require","querySelector","classList","add","ReactDOM","render","getElementById","URL","process","origin","fetch","headers","contentType","status","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"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","file":"static/js/main.63659ad2.chunk.js","sourcesContent":["const DB_CONTENT_TYPES = {\n\tDEBOT: 'debot',\n}\n\nconst COMPONENTS_BINDINGS = {\n\tTEXT: 'Text',\n\tINPUT: 'Input',\n\tTEXTAREA: 'Textarea',\n\tAMOUNT_INPUT: 'AmountInput',\n\tCONFIRM_INPUT: 'ConfirmInput',\n\tADDRESS_INPUT: 'AddressInput',\n\tTOKENS_INPUT: 'TokensInput',\n\tMENU: 'Menu',\n\tSTDOUT: 'Stdout',\n}\n\nconst EXPLORER_BASE_URL = 'https://ton.live/accounts/accountDetails?id=';\n\nconst DEBOT_ADDRESS_SEARCH_PARAM = 'debotAddress';\n\nconst DEBOT_WC = -31;\nconst MNEMONIC_WORD_COUNT = 12;\nconst DERIVATION_PATH = \"m/44'/396'/0'/0/0\";\n\nconst USER_DEBOTS_LS_FIELD = 'USER_DEBOTS_LS_FIELD';\nconst USER_ENV_LS_FIELD = 'USER_ENV_LS_FIELD';\nconst TON_NETWORK_LS_FIELD = 'TON_NETWORK_LS_FIELD';\n\nconst MAIN_NETWORK = 'main.ton.dev';\nconst DEV_NETWORK = 'net.ton.dev';\n\nmodule.exports = {\n\tEXPLORER_BASE_URL,\n\tDB_CONTENT_TYPES,\n\tCOMPONENTS_BINDINGS,\n\tDEBOT_ADDRESS_SEARCH_PARAM,\n\tDEBOT_WC,\n\tMNEMONIC_WORD_COUNT,\n\tDERIVATION_PATH,\n\tUSER_DEBOTS_LS_FIELD,\n\tUSER_ENV_LS_FIELD,\n\tTON_NETWORK_LS_FIELD,\n\tMAIN_NETWORK,\n\tDEV_NETWORK,\n}\n","function decodeString(encodedString) {\n\tif (typeof encodedString !== 'string')\n\t\treturn;\n\n\tconst decodedString = Buffer.from(encodedString, 'hex').toString();\n\n\tconsole.log(decodedString);\n\n\treturn decodedString;\n}\n\nexport default decodeString;\n","export const PUSH_ITEM_TO_STAGE = 'debot/PUSH_ITEM_TO_STAGE';\nexport const CLEAR_STAGE = 'debot/CLEAR_STAGE';\nexport const SET_SIGNING_BOX = 'debot/SET_SIGNING_BOX';\nexport const SET_APPROVE_WINDOW = 'debot/SET_APPROVE_WINDOW';\nexport const SET_DEBOTS_FILTER_KEY = 'debot/SET_DEBOTS_FILTER_KEY';\nexport const SET_LOCAL_DEBOTS_LIST = 'debot/SET_LOCAL_DEBOTS_LIST';\n\nexport const pushItemToStage = item => dispatch => {\n\tdispatch({\n\t\ttype: PUSH_ITEM_TO_STAGE,\n\t\tpayload: item,\n\t})\n}\n\nexport const clearStage = () => dispatch => {\n\tdispatch({ type: CLEAR_STAGE });\n}\n\nexport const setSigningBox = signingBoxInfo => dispatch => {\n\tdispatch({\n\t\ttype: SET_SIGNING_BOX,\n\t\tpayload: signingBoxInfo,\n\t})\n}\n\nexport const setApproveWindow = approveWindowInfo => dispatch => {\n\tdispatch({\n\t\ttype: SET_APPROVE_WINDOW,\n\t\tpayload: approveWindowInfo,\n\t})\n}\n\nexport const setDebotsFilterKey = filterValue => dispatch => {\n\tdispatch({\n\t\ttype: SET_DEBOTS_FILTER_KEY,\n\t\tpayload: filterValue,\n\t})\n}\n\nexport const setLocalDebotsList = debotsList => dispatch => {\n\tdispatch({\n\t\ttype: SET_LOCAL_DEBOTS_LIST,\n\t\tpayload: debotsList,\n\t})\n}\n","import {\n\tPUSH_ITEM_TO_STAGE,\n\tCLEAR_STAGE,\n\tSET_SIGNING_BOX,\n\tSET_APPROVE_WINDOW,\n\tSET_DEBOTS_FILTER_KEY,\n\tSET_LOCAL_DEBOTS_LIST,\n} from '../actions/debot';\nimport { USER_DEBOTS_LS_FIELD, DEV_NETWORK } from 'src/constants';\n\nconst initialState = {\n\tstage: [],\n\tsigningBox: null,\n\tapproveWindow: null,\n\tfilterKey: '',\n\tdebotsList: [\n\t\t{ title: 'TIP-3 DeBot', address: '0:81c12c2f4514124536aafea59db7df0262d3af877b4477afe6514bbc5bc9f317', network: DEV_NETWORK },\n\t\t{ title: 'SMV DeBot (RSquad)', address: '0:2a92e3d01c530697a0ec3ab5c3494474faa7ea0af5fa30d4ed508115bc9957a7', network: DEV_NETWORK },\n\t],\n\tlocalDebotsList: JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [],\n}\n  \nfunction reducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase PUSH_ITEM_TO_STAGE: {\n\t\t\tconst stage = [...state.stage, payload];\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstage,\n\t\t\t}\n\t\t}\n\n\t\tcase CLEAR_STAGE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tstage: [],\n\t\t\t}\n\t\t}\n\n\t\tcase SET_SIGNING_BOX: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tsigningBox: payload,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_APPROVE_WINDOW: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tapproveWindow: payload,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_DEBOTS_FILTER_KEY: {\n\t\t\tconst filterKey = payload.toLowerCase();\n\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tfilterKey,\n\t\t\t}\n\t\t}\n\n\t\tcase SET_LOCAL_DEBOTS_LIST: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tlocalDebotsList: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n","export const SET_ENVIRONMENT_VARIABLE = 'debot/SET_ENVIRONMENT_VARIABLES';\n\nexport const setEnvironmentVariables = variables => dispatch => {\n\tdispatch({\n\t\ttype: SET_ENVIRONMENT_VARIABLE,\n\t\tpayload: variables,\n\t})\n}\n","import {\n\tSET_ENVIRONMENT_VARIABLE,\n} from '../actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nconst initialState = {\n\tvariables: JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {},\n}\n  \nfunction reducer(state = initialState, action) {\n\tconst { type, payload } = action;\n\n\tswitch (type) {\n\t\tcase SET_ENVIRONMENT_VARIABLE: {\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\tvariables: payload,\n\t\t\t}\n\t\t}\n\n\t\tdefault:\n\t\t\treturn state\n\t}\n}\n\nexport default reducer\n","import { combineReducers } from 'redux';\nimport debot from './debot';\nimport environment from './environment';\n\nconst rootReducer = combineReducers({\n\tdebot,\n\tenvironment,\n});\n\nexport default rootReducer;\n","import { createStore, applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\n\nconst initialState = {};\nconst enhancers = [];\nconst middleware = [\n\tthunk,\n];\n\nif (process.env.NODE_ENV === 'development') {\n\tconst devToolsExtension = window.__REDUX_DEVTOOLS_EXTENSION__;\n\n\tif (typeof devToolsExtension === 'function')\n\t\tenhancers.push(devToolsExtension());\n}\n\nconst composedEnhancers = compose(\n\tapplyMiddleware(...middleware),\n\t...enhancers,\n);\n\nconst store = createStore(\n\trootReducer,\n\tinitialState,\n\tcomposedEnhancers,\n);\n\nexport default store;\n","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { Header, DebotsList, DebotPage } from 'src/components';\nimport './index.scss';\n\nconst App = () => {\n\treturn (\n\t\t<div className='app-container'>\n\t\t\t<div className='app-container__flex-wrapper'>\n\t\t\t\t<Header />\n\t\t\t\t<Switch>\n\t\t\t\t\t<Route exact path='/' component={DebotsList} />\n\t\t\t\t\t<Route path='/debot' component={DebotPage} />\n\t\t\t\t</Switch>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import React from 'react';\n\nconst LensIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='lens-icon'\n\t\twidth='22'\n\t\theight='22'\n\t\tviewBox='0 0 22 22'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t\tonClick={onClick}\n\t>\n\t\t<path\n\t\t\td='M16.8881 8.72414C16.8881 13.2678 13.2179 16.9483 8.69405 16.9483C4.17023 16.9483 0.5 13.2678 0.5 8.72414C0.5 4.18044 4.17023 0.5 8.69405 0.5C13.2179 0.5 16.8881 4.18044 16.8881 8.72414Z'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t\t<line\n\t\t\ty1='-0.5'\n\t\t\tx2='9.63903'\n\t\t\ty2='-0.5'\n\t\t\ttransform='matrix(0.705884 0.708327 -0.705884 0.708327 14.3643 15.1724)'\n\t\t\tstroke='#6F6F6F'\n\t\t/>\n\t</svg>\n)\n\nexport default LensIcon;\n","import React from 'react';\n\nconst ArrowIcon = () => (\n\t<svg\n\t\tclassName='arrow-icon'\n\t\twidth='14'\n\t\theight='9'\n\t\tviewBox='0 0 14 9'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M6.76449 9L0.338936 0.230769L13.19 0.23077L6.76449 9Z' fill='#737373'/>\n\t</svg>\n)\n\nexport default ArrowIcon;\n","import React from 'react';\n\nconst BackIcon = () => (\n\t<svg\n\t\tclassName='back-icon'\n\t\twidth='20'\n\t\theight='20'\n\t\tviewBox='0 0 20 20'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M11.0156 2L3.00018 10.0154L11.0156 18.0309' stroke='#5287C3' strokeWidth='3'/>\n\t</svg>\n)\n\nexport default BackIcon;\n","import React from 'react';\n\nconst CancelIcon = ({ onClick = () => false }) => (\n\t<svg\n\t\tclassName='cancel-icon'\n\t\tonClick={onClick}\n\t\twidth='12'\n\t\theight='12'\n\t\tviewBox='0 0 12 12'\n\t\tfill='none'\n\t\txmlns='http://www.w3.org/2000/svg'\n\t>\n\t\t<path d='M9.99902 2L1.99989 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t\t<path d='M2.00098 2L10.0001 9.99914' stroke='#BABABA' strokeWidth='1.5' strokeLinecap='round' strokeLinejoin='round'/>\n\t</svg>\n)\n\nexport default CancelIcon;\n","import React from 'react';\n\nconst DevNetIcon = ({ className }) => (\n\t<img\n\t\tsrc='/dev-net-icon.png'\n\t\tclassName={className ? `network-icon ${className}` : 'network-icon'}\n\t\talt='network'\n\t/>\n)\n\nexport default DevNetIcon;\n","import React from 'react';\n\nconst MainNetIcon = ({ className }) => (\n\t<img\n\t\tsrc='/main-net-icon.png'\n\t\tclassName={className ? `network-icon ${className}` : 'network-icon'}\n\t\talt='network'\n\t/>\n)\n\nexport default MainNetIcon;\n","import store from 'src/store';\nimport { setLocalDebotsList } from 'src/store/actions/debot';\nimport { USER_DEBOTS_LS_FIELD } from 'src/constants';\n\nfunction addLocalDebot(debotObj) {\n\tconst localDebosFromLS = JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [];\n\n\tconst newLocalDebots = [debotObj, ...localDebosFromLS];\n\n\tstore.dispatch(setLocalDebotsList(newLocalDebots));\n\tlocalStorage.setItem(USER_DEBOTS_LS_FIELD, JSON.stringify(newLocalDebots));\n}\n\nexport default addLocalDebot;\n","import store from 'src/store';\nimport { setEnvironmentVariables } from 'src/store/actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nfunction addEnvVariable(key, value) {\n\tconst envFromLS = JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {};\n\n\tconst newEnv = {\n\t\t...envFromLS,\n\t\t[key]: value,\n\t};\n\n\tstore.dispatch(setEnvironmentVariables(newEnv));\n\tlocalStorage.setItem(USER_ENV_LS_FIELD, JSON.stringify(newEnv));\n}\n\nexport default addEnvVariable;\n","function encodeString(decodedString){\n\tif (typeof decodedString !== 'string')\n\t\treturn;\n\n\tconst hex = unescape(encodeURIComponent(decodedString))\n\t\t.split('')\n\t\t.map(char => char.charCodeAt(0).toString(16))\n\t\t.join('');\n\n\treturn hex;\n}\n\nexport default encodeString;\n","function createDebotUrl(debotAddress) {\n\treturn `/debot?debotAddress=${debotAddress}`;\n}\n\nexport default createDebotUrl;\n","import { EXPLORER_BASE_URL } from 'src/constants';\n\nfunction createExplorerUrl(addr) {\n\treturn `${EXPLORER_BASE_URL}${addr}`;\n}\n\nexport default createExplorerUrl;\n","import { TonClient } from '@tonclient/core';\nimport { libWeb } from '@tonclient/lib-web';\nimport { TON_NETWORK_LS_FIELD, MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\n\n// eslint-disable-next-line react-hooks/rules-of-hooks\nTonClient.useBinaryLibrary(libWeb);\n\nclass TonClientController {\n\tconstructor() {\n\t\tthis.selectedNetwork = localStorage.getItem(TON_NETWORK_LS_FIELD) || MAIN_NETWORK;\n\n\t\tthis.mainNetClient = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tserver_address: MAIN_NETWORK,\n\t\t\t},\n\t\t});\n\n\t\tthis.devNetClient = new TonClient({\n\t\t\tnetwork: {\n\t\t\t\tserver_address: DEV_NETWORK,\n\t\t\t},\n\t\t});\n\t}\n\n\tsetSelectedNetwork(network) {\n\t\tlocalStorage.setItem(TON_NETWORK_LS_FIELD, network);\n\t\tthis.selectedNetwork = network;\n\t}\n\n\tget client() {\n\t\tif (this.selectedNetwork === DEV_NETWORK)\n\t\t\treturn this.devNetClient;\n\n\t\treturn this.mainNetClient;\n\t}\n}\n\nconst clientController = new TonClientController();\n\nexport default clientController;\n","import tonClientController from 'src/tonClient';\n\nasync function checkIsValidAddress(address) {\n\ttry {\n\t\tconst result = await tonClientController.client.utils.convert_address({\n\t\t\taddress,\n\t\t\toutput_format: {\n\t\t\t\ttype: 'Hex',\n\t\t\t}\n\t\t})\n\n\t\treturn !!result;\n\t} catch (err) {\n\t\treturn false;\n\t}\n}\n\nexport default checkIsValidAddress;\n","function formDebotFunctionFromId(id) {\n\treturn `0x${parseInt(id, 10).toString(16)}`\n}\n\nexport default formDebotFunctionFromId;\n","import tonClientController from 'src/tonClient';\nimport { MNEMONIC_WORD_COUNT, DERIVATION_PATH } from 'src/constants';\n\nasync function genKeyPairFromMnemonic(mnemonic) {\n\tconst hdkMaster = await tonClientController.client.crypto.hdkey_xprv_from_mnemonic({\n\t\tdictionary: 1,\n\t\tword_count: MNEMONIC_WORD_COUNT,\n\t\tphrase: mnemonic,\n\t});\n\n\tconst hdkRoot = await tonClientController.client.crypto.hdkey_derive_from_xprv_path({\n\t\txprv: hdkMaster.xprv,\n\t\tpath: DERIVATION_PATH,\n\t});\n\n\tconst { secret } = await tonClientController.client.crypto.hdkey_secret_from_xprv({\n\t\txprv: hdkRoot.xprv,\n\t});\n\n\tconst keyPair = await tonClientController.client.crypto.nacl_sign_keypair_from_secret_key({ secret });\n\n\treturn {\n\t\tsecret,\n\t\tpublic: keyPair.public,\n\t};\n}\n\nexport default genKeyPairFromMnemonic;\n","import store from 'src/store';\n\nfunction getEnvVariableFromInput(text) {\n\tif (!text.startsWith('$'))\n\t\treturn false;\n\t\n\tconst varName = text.slice(1);\n\n\tconst { variables } = store.getState().environment;\n\n\treturn variables[varName];\n}\n\nexport default getEnvVariableFromInput;\n","import store from 'src/store';\nimport { setLocalDebotsList } from 'src/store/actions/debot';\nimport { USER_DEBOTS_LS_FIELD } from 'src/constants';\n\nfunction removeLocalDebot(debotAddress) {\n\tconst localDebosFromLS = JSON.parse(localStorage.getItem(USER_DEBOTS_LS_FIELD)) || [];\n\n\tconst newLocalDebots = localDebosFromLS.filter(debot => debot.address !== debotAddress);\n\n\tstore.dispatch(setLocalDebotsList(newLocalDebots));\n\tlocalStorage.setItem(USER_DEBOTS_LS_FIELD, JSON.stringify(newLocalDebots));\n}\n\nexport default removeLocalDebot;\n","import store from 'src/store';\nimport { setEnvironmentVariables } from 'src/store/actions/environment';\nimport { USER_ENV_LS_FIELD } from 'src/constants';\n\nfunction removeEnvVariable(key) {\n\tconst envFromLS = JSON.parse(localStorage.getItem(USER_ENV_LS_FIELD)) || {};\n\n\tconst newEnv = { ...envFromLS };\n\n\tdelete newEnv[key];\n\n\tstore.dispatch(setEnvironmentVariables(newEnv));\n\tlocalStorage.setItem(USER_ENV_LS_FIELD, JSON.stringify(newEnv));\n}\n\nexport default removeEnvVariable;\n","function isCustomScrollBar() {\n\treturn !navigator.platform.toLowerCase().includes('mac');\n}\n\nexport default isCustomScrollBar;\n","import { useLocation } from 'react-router-dom';\n\nfunction useSearchParams() {\n\treturn new URLSearchParams(useLocation().search);\n}\n\nexport default useSearchParams;\n","import useSearchParams from './useSearchParams';\nimport { DEBOT_ADDRESS_SEARCH_PARAM } from 'src/constants';\n\nfunction useDebotAddress() {\n\tconst searchParams = useSearchParams();\n\treturn searchParams.get(DEBOT_ADDRESS_SEARCH_PARAM);\n}\n\nexport default useDebotAddress;\n","/* eslint-disable camelcase */\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router-dom';\nimport { createDebotUrl, checkIsValidAddress } from 'src/helpers';\nimport { setDebotsFilterKey } from 'src/store/actions/debot';\nimport { LensIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst SearchBar = () => {\n\tconst history = useHistory();\n\tconst dispatch = useDispatch();\n\tconst [inputValue, setInputValue] = useState('');\n\n\tconst searchDebot = async () => {\n\t\tconst isValidAddress = await checkIsValidAddress(inputValue);\n\n\t\tif (isValidAddress) {\n\t\t\tconst debotUrl = createDebotUrl(inputValue);\n\t\t\tdispatch(setDebotsFilterKey(''));\n\n\t\t\treturn history.push(debotUrl);\n\t\t}\n\n\t\tdispatch(setDebotsFilterKey(inputValue));\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSearch = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldSearch) {\n\t\t\tevent.preventDefault();\n\t\t\tsearchDebot();\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='search-bar-container'>\n\t\t\t<input\n\t\t\t\tclassName='search-bar-container__input'\n\t\t\t\ttype='text'\n\t\t\t\tplaceholder='Enter debot address'\n\t\t\t\tvalue={inputValue}\n\t\t\t\tonChange={(e) => setInputValue(e.target.value)}\n\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t/>\n\t\t\t<LensIcon onClick={searchDebot} />\n\t\t</div>\n\t);\n}\n\nexport default SearchBar;\n","import React from 'react';\nimport { Link, useRouteMatch } from 'react-router-dom';\nimport { BackIcon } from 'src/components/icons';\nimport SearchBar from '../SearchBar';\nimport './index.scss';\n\nconst Header = () => {\n\tconst match = useRouteMatch('/debot');\n\n\treturn (\n\t\t<header className='header-container'>\n\t\t\t<Link to='/'><h1>Free TON DeBot Browser</h1></Link>\n\t\t\t{match\n\t\t\t\t&& <Link to='/' className='header-container__back-button'>\n\t\t\t\t\t<BackIcon />\n\t\t\t\t\t<p>Back</p>\n\t\t\t\t</Link>\n\t\t\t}\n\t\t\t<SearchBar />\n\t\t</header>\n\t);\n}\n\nexport default Header;\n","import React from 'react';\nimport tonClientController from 'src/tonClient';\nimport { Link } from 'react-router-dom';\nimport { createDebotUrl } from 'src/helpers';\nimport { DEV_NETWORK, MAIN_NETWORK } from 'src/constants';\nimport { MainNetIcon, DevNetIcon } from 'src/components/icons';\n\nconst ListItem = ({ debot, isGrey }) => {\n\tconst linkAddress = createDebotUrl(debot.address);\n\tconst listItemClassName = `debots-list__item ${isGrey ? 'debots-list__item--grey' : ''}`;\n\n\tconst handleNetworkSwitch = () => {\n\t\tif (debot.network)\n\t\t\ttonClientController.setSelectedNetwork(debot.network);\n\t}\n\n\treturn (\n\t\t<Link to={linkAddress} className={listItemClassName} onClick={handleNetworkSwitch}>\n\t\t\t<div className='debots-list__item-title'>\n\t\t\t\t{debot.title}\n\t\t\t\t{debot.network === DEV_NETWORK && <DevNetIcon />}\n\t\t\t\t{debot.network === MAIN_NETWORK && <MainNetIcon />}\n\t\t\t</div>\n\t\t\t<div className='debots-list__item-address'>\n\t\t\t\t{debot.address}\n\t\t\t</div>\n\t\t</Link>\n\t);\n}\n\nexport default ListItem;\n","import React, { useState, Fragment } from 'react';\nimport { useSelector } from 'react-redux';\nimport tonClientController from 'src/tonClient';\nimport { Loader, ControlWithPopup, AddDebot, Environment, OptionsList } from 'src/components';\nimport { MainNetIcon, DevNetIcon } from 'src/components/icons';\nimport { MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\nimport DebotListItem from './ListItem';\nimport './index.scss';\n\nconst DebotsList = () => {\n\tconst [selectedNetwork, setSelectedNetwork] = useState(tonClientController.selectedNetwork);\n\tconst debotsList = useSelector(state => state.debot.debotsList);\n\tconst localDebotsList = useSelector(state => state.debot.localDebotsList);\n\tconst filterKey = useSelector(state => state.debot.filterKey);\n\tconst filteredDebots = debotsList.filter(debot => debot.title.toLowerCase().startsWith(filterKey) || debot.address.startsWith(filterKey));\n\tconst filteredLocalDebots = localDebotsList.filter(debot => debot.title.toLowerCase().startsWith(filterKey) || debot.address.startsWith(filterKey));\n\n\tconst renderDebotListItems = () => filteredDebots.map((debot, index) => (\n\t\t<DebotListItem\n\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\tdebot={debot}\n\t\t\tkey={`${debot.address}-${index}`}\n\t\t/>\n\t));\n\n\tconst renderLocalDebotListItems = () => filteredLocalDebots.map((debot, index) => (\n\t\t<DebotListItem\n\t\t\tisGrey={index % 2 === 0 || index === 0}\n\t\t\tdebot={debot}\n\t\t\tkey={`${debot.address}-${index}`}\n\t\t/>\n\t));\n\n\tconst handleSelectNetwork = (network) => {\n\t\ttonClientController.setSelectedNetwork(network);\n\t\tsetSelectedNetwork(network);\n\t}\n\n\tconst renderSelectedItem = () => (\n\t\t<div className='options-list__selected-item'>\n\t\t\t{selectedNetwork === DEV_NETWORK ? <DevNetIcon /> : <MainNetIcon />}\n\t\t\t{selectedNetwork}\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<div className='debots-list'>\n\t\t\t<div className='debots-list__controls'>\n\t\t\t\t<OptionsList selectedItem={renderSelectedItem()} height={84} width={200}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => handleSelectNetwork(MAIN_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MainNetIcon />\n\t\t\t\t\t\t{MAIN_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => handleSelectNetwork(DEV_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DevNetIcon />\n\t\t\t\t\t\t{DEV_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t</OptionsList>\n\t\t\t\t<ControlWithPopup height={310} width={500} name='Add DeBot'>\n\t\t\t\t\t<AddDebot />\n\t\t\t\t</ControlWithPopup>\n\t\t\t\t<ControlWithPopup height={472} width={660} name='Show Environment'>\n\t\t\t\t\t<Environment />\n\t\t\t\t</ControlWithPopup>\n\t\t\t</div>\n\t\t\t{!!filteredLocalDebots.length\n\t\t\t\t&& <Fragment>\n\t\t\t\t\t<div className='debots-list__section-title'>Your saved DeBots</div>\n\t\t\t\t\t{renderLocalDebotListItems()}\n\t\t\t\t</Fragment>\n\t\t\t}\n\t\t\t{!!filteredDebots.length\n\t\t\t\t&& <Fragment>\n\t\t\t\t\t<div className='debots-list__section-title'>Suggested DeBots</div>\n\t\t\t\t\t{renderDebotListItems()}\n\t\t\t\t</Fragment>\n\t\t\t}\n\t\t\t{(!filteredDebots.length && !filteredLocalDebots.length) && <Loader isFailed />}\n\t\t</div>\n\t);\n}\n\nexport default DebotsList;\n","const TERMINAL_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n        {\n\t\t\t\"name\": \"input\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"multiline\",\"type\":\"bool\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputStr\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n                {\"name\":\"prompt\",\"type\":\"bytes\"},\n                {\"name\":\"multiline\",\"type\":\"bool\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputInt\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"int256\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputUint\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint256\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputTons\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint128\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"inputBoolean\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bool\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"print\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"message\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default TERMINAL_ABI;\n","const MENU_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"select\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"title\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"description\",\"type\":\"bytes\"},\n\t\t\t\t{\"components\":[{\"name\":\"title\",\"type\":\"bytes\"},{\"name\":\"description\",\"type\":\"bytes\"},{\"name\":\"handlerId\",\"type\":\"uint32\"}],\"name\":\"items\",\"type\":\"tuple[]\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"index\",\"type\":\"uint32\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n}\n\nexport default MENU_ABI;\n","const AMOUNT_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"decimals\",\"type\":\"uint8\"},\n\t\t\t\t{\"name\":\"min\",\"type\":\"uint128\"},\n\t\t\t\t{\"name\":\"max\",\"type\":\"uint128\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"uint128\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default AMOUNT_INPUT_ABI;\n","const CONFIRM_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"bool\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default CONFIRM_INPUT_ABI;\n","const ADDRESS_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"address\"}\n\t\t\t]\n\t\t},\n        {\n\t\t\t\"name\": \"select\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"address\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default ADDRESS_INPUT_ABI;","const NUMBER_INPUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"get\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"prompt\",\"type\":\"bytes\"},\n\t\t\t\t{\"name\":\"min\",\"type\":\"int256\"},\n\t\t\t\t{\"name\":\"max\",\"type\":\"int256\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"value\",\"type\":\"int256\"}\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default NUMBER_INPUT_ABI;\n","const ECHO_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"echo\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"answerId\",\"type\":\"uint32\"},\n\t\t\t\t{\"name\":\"request\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t\t{\"name\":\"response\",\"type\":\"bytes\"}\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default ECHO_ABI;\n","const STDOUT_ABI = {\n\t\"ABI version\": 2,\n\t\"header\": [\"time\"],\n\t\"functions\": [\n\t\t{\n\t\t\t\"name\": \"print\",\n\t\t\t\"inputs\": [\n\t\t\t\t{\"name\":\"message\",\"type\":\"bytes\"}\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t},\n\t\t{\n\t\t\t\"name\": \"constructor\",\n\t\t\t\"inputs\": [\n\t\t\t],\n\t\t\t\"outputs\": [\n\t\t\t]\n\t\t}\n\t],\n\t\"data\": [\n\t],\n\t\"events\": [\n\t]\n};\n\nexport default STDOUT_ABI;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { TERMINAL_ABI } from '../ABIs';\n\nconst ID = '8796536366ee21852db56dccb60bc564598b618c865fc50c8b1ab740bba128e3';\n\nclass Terminal {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = TERMINAL_ABI;\n\t}\n\n\tinputStr(params) {\n\t\tconst { answerId, multiline, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: multiline ? COMPONENTS_BINDINGS.TEXTAREA : COMPONENTS_BINDINGS.INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputInt(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputTons(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig: {\n\t\t\t\tmin: '0',\n\t\t\t\tdecimals: '9',\n\t\t\t},\n\t\t\tcomponent: COMPONENTS_BINDINGS.TOKENS_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tinputBoolean(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.CONFIRM_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tprint(params) {\n\t\tconst { answerId, message } = params.value;\n\n\t\tconst decodedMessage = decodeString(message);\n\t\tconst stageObject = {\n\t\t\ttext: decodedMessage,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'input':\n\t\t\t\t\treturn this.inputStr(extendedParams);\n\n\t\t\t\tcase 'inputStr':\n\t\t\t\t\treturn this.inputStr(extendedParams);\n\t\t\t\t\n\t\t\t\tcase 'inputInt':\n\t\t\t\t\treturn this.inputInt(extendedParams);\n\n\t\t\t\tcase 'inputUint':\n\t\t\t\t\treturn this.inputInt(extendedParams);\n\n\t\t\t\tcase 'inputTons':\n\t\t\t\t\treturn this.inputTons(extendedParams);\n\n\t\t\t\tcase 'inputBoolean':\n\t\t\t\t\treturn this.inputBoolean(extendedParams);\n\n\t\t\t\tcase 'print':\n\t\t\t\t\treturn this.print(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Function does not exist on interface: Terminal');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Terminal;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { MENU_ABI } from '../ABIs';\n\nconst ID = 'ac1a4d3ecea232e49783df4a23a81823cdca3205dc58cd20c4db259c25605b48';\n\nclass Menu {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = MENU_ABI;\n\t}\n\n\tselect(params) {\n\t\tconst { description, title, items } = params.value;\n\n\t\tconst decodedTitle = decodeString(title);\n\t\tconst decodedDescription = decodeString(description);\n\t\tconst menuItems = items.map(item => ({\n\t\t\tfunctionId: item.handlerId,\n\t\t\ttitle: decodeString(item.title),\n\t\t\tdescription: decodeString(item.description),\n\t\t}));\n\n\t\tconst stageObject = {\n\t\t\ttitle: decodedTitle,\n\t\t\ttext: decodedDescription,\n\t\t\tmenuItems,\n\t\t\tcomponent: COMPONENTS_BINDINGS.MENU,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn this.select(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('Function does not exist on interface: Menu');\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Menu;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { AMOUNT_INPUT_ABI } from '../ABIs';\n\nconst ID = 'a1d347099e29c1624c8890619daf207bde18e92df5220a54bcc6d858309ece84';\n\nclass AmountInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = AMOUNT_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt, min, max, ...config } = params.value;\n\n\t\tconfig.min = min;\n\t\tconfig.max = max;\n\n\t\tif (max && min && parseInt(max) < parseInt(min)) {\n\t\t\tconfig.max = min;\n\t\t}\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default AmountInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { CONFIRM_INPUT_ABI } from '../ABIs';\n\nconst ID = '16653eaf34c921467120f2685d425ff963db5cbb5aa676a62a2e33bfc3f6828a';\n\nclass ConfirmInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = CONFIRM_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.CONFIRM_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default ConfirmInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { ADDRESS_INPUT_ABI } from '../ABIs';\n\nconst ID = 'd7ed1bd8e6230871116f4522e58df0a93c5520c56f4ade23ef3d8919a984653b';\n\nclass AddressInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = ADDRESS_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt } = params.value;\n\n\t\tconst decodedPrompt = prompt ? decodeString(prompt) : '';\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tcomponent: COMPONENTS_BINDINGS.ADDRESS_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tselect(params) {\n\t\treturn this.get(params);\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tcase 'select':\n\t\t\t\t\treturn this.select(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default AddressInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { NUMBER_INPUT_ABI } from '../ABIs';\n\nconst ID = 'c5a9558b2664aed7dc3e6123436d544f13ffe69ab0e259412f48c6d1c8588401';\n\nclass NumberInput {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = NUMBER_INPUT_ABI;\n\t}\n\n\tget(params) {\n\t\tconst { answerId, prompt, max, min, ...config } = params.value;\n\t\t\n\t\tconsole.log(min, max);\n\n\t\tconfig.min = min;\n\t\tconfig.max = max;\n\n\t\tif (max && min && parseInt(max) < parseInt(min)) {\n\t\t\tconfig.max = min;\n\t\t}\n\n\t\tconst decodedPrompt = decodeString(prompt);\n\t\tconst stageObject = {\n\t\t\ttext: decodedPrompt,\n\t\t\tfunctionId: answerId,\n\t\t\tconfig,\n\t\t\tcomponent: COMPONENTS_BINDINGS.AMOUNT_INPUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'get':\n\t\t\t\t\treturn this.get(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default NumberInput;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { DEngine } from 'src/debot';\nimport { decodeString, encodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { ECHO_ABI } from '../ABIs';\n\nconst ID = 'f6927c0d4bdb69e1b52d27f018d156ff04152f00558042ff674f0fec32e4369d';\n\nclass Echo {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = ECHO_ABI;\n\t}\n\n\techo(params) {\n\t\tconst { debotAddress } = params;\n\t\tconst { answerId, request } = params.value;\n\n\t\tconst decodedRequest = decodeString(request);\n\t\tconst response = encodeString(decodedRequest);\n\t\tconst interfaceAddress = `${DEBOT_WC}:${this.id}`;\n\t\t\n\t\tDEngine.callDebotFunction(debotAddress, interfaceAddress, answerId, { response })\n\t\t\t.catch(err => {\n\t\t\t\tconsole.error(err);\n\n\t\t\t\tconst stageObject = {\n\t\t\t\t\ttext: err.message,\n\t\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\t\tisError: true,\n\t\t\t\t\tinterfaceAddress,\n\t\t\t\t};\n\t\t\t\t\n\t\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t\t});\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'echo':\n\t\t\t\t\treturn this.echo(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Echo;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { decodeString } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { STDOUT_ABI } from '../ABIs';\n\nconst ID = 'c91dcc3fddb30485a3a07eb7c1e5e2aceaf75f4bc2678111de1f25291cdda80b';\n\nclass Stdout {\n\tconstructor() {\n\t\tthis.id = ID;\n\t\tthis.abi = STDOUT_ABI;\n\t}\n\n\tprint(params) {\n\t\tconst { message } = params.value;\n\n\t\tconst decodedMessage = decodeString(message);\n\t\tconst stageObject = {\n\t\t\ttext: decodedMessage,\n\t\t\tcomponent: COMPONENTS_BINDINGS.STDOUT,\n\t\t\tinterfaceAddress: `${DEBOT_WC}:${this.id}`,\n\t\t};\n\t\t\n\t\tstore.dispatch(pushItemToStage(stageObject));\n\t}\n\n\tasync call(params) {\n\t\ttry {\n\t\t\tconst decodedMessage = await tonClientController.client.abi.decode_message({\n\t\t\t\tabi: {\n\t\t\t\t\ttype: 'Contract',\n\t\t\t\t\tvalue: this.abi,\n\t\t\t\t},\n\t\t\t\tmessage: params.message,\n\t\t\t});\n\n\t\t\tconst extendedParams = {\n\t\t\t\t...params,\n\t\t\t\t...decodedMessage,\n\t\t\t}\n\n\t\t\tswitch(decodedMessage.name) {\n\t\t\t\tcase 'print':\n\t\t\t\t\treturn this.print(extendedParams);\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error(`Function does not exist on interface: ${this.constructor.name}`);\n\t\t\t}\n\t\t} catch (err) {\n\t\t\tconsole.error('Interface execution failed: ', err);\n\t\t}\n\t}\n}\n\nexport default Stdout;\n","import Terminal from './terminal';\nimport Menu from './menu';\nimport AmountInput from './amount_input';\nimport ConfirmInput from './confirm_input';\nimport AddressInput from './address_input';\nimport NumberInput from './number_input';\nimport Echo from './echo';\nimport Stdout from './stdout';\n\nclass InterfacesController {\n\tconstructor() {\n\t\tconst terminal = new Terminal();\n\t\tconst menu = new Menu();\n\t\tconst amountInput = new AmountInput();\n\t\tconst confirmInput = new ConfirmInput();\n\t\tconst addressInput = new AddressInput();\n\t\tconst numberInput = new NumberInput();\n\t\tconst echo = new Echo();\n\t\tconst stdout = new Stdout();\n\n\t\tthis.state = new Map([\n\t\t\t[terminal.id, terminal],\n\t\t\t[menu.id, menu],\n\t\t\t[amountInput.id, amountInput],\n\t\t\t[confirmInput.id, confirmInput],\n\t\t\t[addressInput.id, addressInput],\n\t\t\t[numberInput.id, numberInput],\n\t\t\t[echo.id, echo],\n\t\t\t[stdout.id, stdout],\n\t\t]);\n\t}\n\n\tdelegateToInterface(interfaceId, params) {\n\t\tconst _interface = this.state.get(interfaceId);\n\n\t\tconsole.log(`Calling ${_interface?.constructor?.name} by id: ${interfaceId}`);\n\n\t\ttry {\n\t\t\t_interface.call(params);\n\t\t} catch(_) {\n\t\t\tconsole.error(`Interface with id ${interfaceId} is not implemented`);\n\t\t}\n\t}\n}\n\nconst interfacesController = new InterfacesController();\n\nexport default interfacesController;\n","import store from 'src/store';\nimport tonClientController from 'src/tonClient';\nimport { DEngine } from 'src/debot';\nimport { COMPONENTS_BINDINGS, DEBOT_WC } from 'src/constants';\nimport { pushItemToStage } from 'src/store/actions/debot';\nimport { setSigningBox, setApproveWindow } from 'src/store/actions/debot';\nimport InterfacesController from './interfaces';\n\nclass DebotBrowser {\n\tconstructor() {\n\t\tthis.debot_handle = null;\n\t\tthis.debot_abi = null;\n\t\tthis.info = null;\n\t\tthis.deprecatedMessageTimeout = null;\n\t\tthis.interfacesQueue = [];\n\t}\n\n\tsetDebotParams(params) {\n\t\tconst { debot_handle, debot_abi, info } = params;\n\n\t\tthis.debot_handle = debot_handle;\n\t\tthis.debot_abi = debot_abi;\n\t\tthis.info = info;\n\t}\n\n\treleaseInterfacesQueue() {\n\t\tthis.interfacesQueue.shift();\n\n\t\tif (this.interfacesQueue.length) {\n\t\t\tconst interfaceState = this.interfacesQueue[0];\n\t\t\tconst { interfaceId, debotAddress, params } = interfaceState;\n\n\t\t\tInterfacesController.delegateToInterface(interfaceId, {\n\t\t\t\tdebotAddress,\n\t\t\t\t...params,\n\t\t\t});\n\t\t}\n\t}\n\n\tclearInterfacesQueue() {\n\t\tthis.interfacesQueue = [];\n\t}\n\n\tshowDeprecatedMessage() {\n\t\tif (this.deprecatedMessageTimeout)\n\t\t\tclearTimeout(this.deprecatedMessageTimeout);\n\n\t\tthis.deprecatedMessageTimeout = setTimeout(() => {\n\t\t\tthis.deprecatedMessageTimeout = null;\n\n\t\t\tconst stageObject = {\n\t\t\t\ttext: 'This DeBot is deprecated and therefore no longer supported.',\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}, 1000)\n\t}\n\n\tlog(loggerParams) {\n\t\tconst browserParams = {\n\t\t\tdebot_handle: this.debot_handle,\n\t\t\tdebot_abi: this.debot_abi,\n\t\t\tinfo: this.info,\n\t\t};\n\n\t\tconsole.log(browserParams, loggerParams);\n\n\t\tif (loggerParams.msg) {\n\t\t\tconst stageObject = {\n\t\t\t\ttext: loggerParams.msg,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}\n\t}\n\n\tshow_action() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tinput() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tasync get_signing_box() {\n\t\tconst keysPromise = new Promise((resolve) => {\n\t\t\tstore.dispatch(setSigningBox({\n\t\t\t\tsubmit: resolve,\n\t\t\t}));\n\t\t});\n\n\t\tconst keys = await keysPromise;\n\n\t\tconst { handle } = await tonClientController.client.crypto.get_signing_box(keys);\n\n\t\tstore.dispatch(setSigningBox(null));\n\n\t\treturn { signing_box: handle };\n\t}\n\n\tinvoke_debot() {\n\t\tthis.showDeprecatedMessage();\n\t}\n\n\tasync send(params) {\n\t\ttry {\n\t\t\tconst parsedMessage = await tonClientController.client.boc.parse_message({ boc: params.message })\n\n\t\t\tconst { dst, src, dst_workchain_id } = parsedMessage.parsed;\n\t\t\tconst [, interfaceId] = dst.split(':');\n\t\n\t\t\tif (dst_workchain_id === DEBOT_WC) {\n\t\t\t\tthis.interfacesQueue.push({\n\t\t\t\t\tinterfaceId,\n\t\t\t\t\tdebotAddress: src,\n\t\t\t\t\tparams,\n\t\t\t\t})\n\n\t\t\t\tif (this.interfacesQueue.length === 1) {\n\t\t\t\t\tInterfacesController.delegateToInterface(interfaceId, {\n\t\t\t\t\t\tdebotAddress: src,\n\t\t\t\t\t\t...params,\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.log('Call other debot', parsedMessage, params);\n\n\t\t\t\tif (DEngine.storage.has(dst)) {\n\t\t\t\t\tconst { debot_handle } = DEngine.storage.get(dst);\n\n\t\t\t\t\tawait DEngine.debotModule.send({ debot_handle, message: params.message });\n\t\t\t\t} else {\n\t\t\t\t\tconst { debot_handle } = await DEngine.initDebot(dst);\n\n\t\t\t\t\tawait DEngine.debotModule.send({ debot_handle, message: params.message });\n\t\t\t\t}\n\t\t\t}\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\n\t\t\tconst stageObject = {\n\t\t\t\ttext: err.message,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t};\n\t\t\t\n\t\t\tstore.dispatch(pushItemToStage(stageObject));\n\t\t}\t\n\t}\n\n\tasync approve(params) {\n\t\tconst approvePromise = new Promise((resolve) => {\n\t\t\tstore.dispatch(setApproveWindow({\n\t\t\t\tsubmit: resolve,\n\t\t\t\tparams: params.activity,\n\t\t\t}));\n\t\t});\n\n\t\tconst approved = await approvePromise;\n\n\t\tstore.dispatch(setApproveWindow(null));\n\n\t\treturn { approved };\n\t}\n}\n\nexport default DebotBrowser;","import store from 'src/store';\nimport { DebotModule } from '@tonclient/core';\nimport tonClientController from 'src/tonClient';\nimport { formDebotFunctionFromId } from 'src/helpers';\nimport { COMPONENTS_BINDINGS, DEV_NETWORK } from 'src/constants';\nimport { pushItemToStage, clearStage, setApproveWindow, setSigningBox } from 'src/store/actions/debot';\nimport DebotBrowser from './DebotBrowser';\n\nclass DEngine {\n\tconstructor() {\n\t\tthis.mainDebotModule = new DebotModule(tonClientController.mainNetClient);\n\t\tthis.devDebotModule = new DebotModule(tonClientController.devNetClient);\n\t\tthis.storage = new Map();\n\t}\n\n\tget debotModule() {\n\t\tif (tonClientController.selectedNetwork === DEV_NETWORK)\n\t\t\treturn this.devDebotModule;\n\n\t\treturn this.mainDebotModule;\n\t}\n\n\tasync initDebot(address) {\n\t\tconst debotBrowser = new DebotBrowser();\n\n\t\tconst initParams = await this.debotModule.init({ address }, debotBrowser);\n\n\t\tdebotBrowser.setDebotParams(initParams);\n\t\tthis.storage.set(address, { ...initParams, browser: debotBrowser });\n\n\t\treturn initParams\n\t}\n\n\tasync runDebot(address) {\n\t\tconst initParams = await this.initDebot(address);\n\n\t\tconst { debot_handle } = initParams;\n\n\t\tawait this.debotModule.start({ debot_handle });\n\n\t\treturn initParams;\n\t}\n\n\tasync callDebotFunction(debotAddress, interfaceAddress, functionId, input) {\n\t\tconst debotParams = this.storage.get(debotAddress);\n\t\tconst { debot_handle, debot_abi, browser } = debotParams;\n\n\t\tlet call_set;\n\n\t\tif (functionId && functionId !== '0') {\n\t\t\tconst functionName = formDebotFunctionFromId(functionId);\n\n\t\t\tcall_set = {\n\t\t\t\tfunction_name: functionName,\n\t\t\t}\n\n\t\t\tif (input) {\n\t\t\t\tcall_set.input = input;\n\t\t\t}\n\t\t}\n\n\t\tconst encodedMessage = await tonClientController.client.abi.encode_internal_message({\n\t\t\tabi: {\n\t\t\t\ttype: 'Json',\n\t\t\t\tvalue: debot_abi,\n\t\t\t},\n\t\t\taddress: debotAddress,\n\t\t\tsrc_address: interfaceAddress,\n\t\t\tcall_set,\n\t\t\tvalue: '1000000000000000',\n\t\t});\n\n\t\ttry {\n\t\t\tconst sendRes = await this.debotModule.send({ debot_handle, message: encodedMessage.message });\n\n\t\t\tbrowser.releaseInterfacesQueue();\n\n\t\t\treturn sendRes;\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\n\t\t\tbrowser.releaseInterfacesQueue();\n\n\t\t\tstore.dispatch(pushItemToStage({\n\t\t\t\ttext: err.message,\n\t\t\t\tcomponent: COMPONENTS_BINDINGS.TEXT,\n\t\t\t\tisError: true,\n\t\t\t}));\n\t\t}\n\t}\n\n\tasync reloadDebot(address) {\n\t\tstore.dispatch(clearStage());\n\t\tstore.dispatch(setApproveWindow(null));\n\t\tstore.dispatch(setSigningBox(null));\n\t\t\n\t\tconst debotParams = this.storage.get(address);\n\t\tconst { browser } = debotParams;\n\n\t\tbrowser.clearInterfacesQueue();\n\n\t\treturn this.runDebot(address);\n\t}\n}\n\nconst dEngine = new DEngine();\n\nexport default dEngine;\n","import React, { useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst Text = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { text, functionId, interfaceAddress, isError } = params;\n\n\tuseEffect(() => {\n\t\tconst runDebotFunction = async () => {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\n\t\trunDebotFunction();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\tconst textClassName = `stage-component__text ${isError ? 'stage-component__text--error' : ''}`;\n\n\treturn (\n\t\t<div className={textClassName}>\n\t\t\t{text}\n\t\t</div>\n\t)\n};\n\nexport default Text;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDebotAddress, encodeString, getEnvVariableFromInput } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst Input = ({\n\tparams,\n\ttype = 'text',\n\tisMultiline = false,\n\tcustomCallback,\n\tcustomErrorText,\n\tsetCustomErrorText,\n}) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst inputRef = useRef(null);\n\tconst { text, interfaceAddress, functionId } = params;\n\n\tuseEffect(() => {\n\t\tinputRef?.current?.focus();\n\t}, []);\n\n\tconst handleInputChange = event => {\n\t\tsetInputValue(event.target.value);\n\t\tsetErrorText('');\n\n\t\tif (setCustomErrorText)\n\t\t\tsetCustomErrorText('');\n\t}\n\n\tconst handleSend = async () => {\n\t\tif (errorText || customErrorText || !inputValue)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tif (customCallback)\n\t\t\t\treturn customCallback(inputValue);\n\n\t\t\tconst value = getEnvVariableFromInput(inputValue) || inputValue;\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: encodeString(value) });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst isSendKeyPressed = isEnter && !shiftKey && !altKey;\n\n\t\tif (isSendKeyPressed) {\n\t\t\tevent.preventDefault();\n\n\t\t\thandleSend();\n\t\t}\n\t}\n\n\tconst inputClassName = `stage-component__input ${errorText || customErrorText ? 'stage-component__input--error' : ''}`;\n\n\treturn (\n\t\t<div className='stage-component__input-container'>\n\t\t\t{!!text && <span className='stage-component__input-label'>{text}</span>}\n\t\t\t<div className='stage-component__input-flex'>\n\t\t\t\t{isMultiline\n\t\t\t\t\t? <textarea\n\t\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t: <input\n\t\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\ttype={type}\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\t\tref={inputRef}\n\t\t\t\t\t/>\n\t\t\t\t}\n\t\t\t\t<div className='stage-component__input-send-button' onClick={handleSend}>Send</div>\n\t\t\t</div>\n\t\t\t{!!errorText && <span className='stage-component__input-error'>{errorText}</span>}\n\t\t\t{!!customErrorText && <span className='stage-component__input-error'>{customErrorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default Input;\n","import React from 'react';\nimport Input from '../Input';\n\nconst Textarea = ({ params, type = 'text' }) => {\n\treturn <Input\n\t\tparams={params}\n\t\ttype={type}\n\t\tisMultiline={true}\n\t/>\n};\n\nexport default Textarea;\n","import React, { useState, useRef, useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\n\nconst normalizeValue = (value, power) => {\n\tif (!power || power === \"0\")\n\t\treturn value;\n\n\tconst numPower = parseInt(power);\n\n\treturn (parseFloat(value) * Math.pow(10, numPower)).toString();\n}\n\nfunction formStepFromDecimals(decimals) {\n\tif (!decimals || decimals === \"0\")\n\t\treturn '1';\n\n\tconst decimalsInt = parseInt(decimals, 10);\n\tlet resultString = '0.';\n\n\tfor(let i = 1; i < decimalsInt; i++) {\n\t\tresultString += '0';\n\t}\n\n\tresultString += '1';\n\n\treturn resultString;\n}\n\nfunction formDescription(config) {\n\tif (config.min && config.max)\n\t\treturn `Input value must be greater than (or equal) ${config.min} and less than (or equal) ${config.max}`;\n\telse if (config.min)\n\t\treturn `Input value must be greater than (or equal) ${config.min}`;\n\telse if (config.max)\n\t\treturn `Input value must be less than (or equal) ${config.max}`;\n\telse\n\t\treturn false;\n}\n\nconst AmountInput = ({\n\tparams,\n\tcustomCallback,\n\tcustomErrorText,\n\tsetCustomErrorText,\n}) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst inputRef = useRef(null);\n\tconst { text, functionId, interfaceAddress, config = {} } = params;\n\tconst inputConfig = {\n\t\tmin: config.min,\n\t\tmax: config.max,\n\t\tstep: formStepFromDecimals(config.decimals),\n\t};\n\tconst description = formDescription(config);\n\n\tuseEffect(() => {\n\t\tinputRef?.current?.focus();\n\t}, []);\n\n\tconst handleInputChange = event => {\n\t\tconst { value } = event.target;\n\t\t\n\t\tif (value === '') {\n\t\t\tsetInputValue(event.target.value);\n\t\t\tsetErrorText('');\n\n\t\t\tif (setCustomErrorText)\n\t\t\t\tsetCustomErrorText('');\n\n\t\t\treturn;\n\t\t}\n\n\t\tif (!config.decimals || config.decimals === \"0\") {\n\t\t\tif (value.includes('.')) {\n\t\t\t\tsetErrorText('This input does not support decimals');\n\t\t\t\tsetInputValue(event.target.value);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t} else {\n\t\t\tconst [, decimalsString] = value.split('.');\n\n\t\t\tif (decimalsString && parseInt(config.decimals) < decimalsString.length) {\n\t\t\t\tsetErrorText('Too many decimals');\n\t\t\t\tsetInputValue(event.target.value);\n\n\t\t\t\treturn;\n\t\t\t}\n\t\t}\n\n\t\tconst floatValue = parseFloat(value);\n\t\tconst isOutOfRange = (config.max && floatValue > config.max) || (config.min && floatValue < config.min);\n\n\t\tif (value.includes('e')) {\n\t\t\tsetErrorText('Input includes not valid characters');\n\t\t} else if (isOutOfRange) {\n\t\t\tsetErrorText(description);\n\t\t} else {\n\t\t\tsetErrorText('');\n\n\t\t\tif (setCustomErrorText)\n\t\t\t\tsetCustomErrorText('');\n\t\t}\n\n\t\tsetInputValue(event.target.value);\n\t}\n\n\tconst handleSend = async () => {\n\t\tif (errorText || customErrorText || !inputValue)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tif (customCallback)\n\t\t\t\treturn customCallback(inputValue);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: normalizeValue(inputValue, config.decimals) });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\tconst handleKeyPress = event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldTriggerFunction = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldTriggerFunction) {\n\t\t\tevent.preventDefault();\n\n\t\t\thandleSend();\n\t\t}\n\t}\n\n\tconst inputClassName = `stage-component__input ${errorText ? 'stage-component__input--error' : ''}`;\n\n\treturn (\n\t\t<div className='stage-component__input-container'>\n\t\t\t{!!text && <span className='stage-component__input-label'>{text}</span>}\n\t\t\t{!!description && <div className='stage-component__input-description'>{description}</div>}\n\t\t\t<div className='stage-component__input-flex'>\n\t\t\t\t<input\n\t\t\t\t\tclassName={inputClassName}\n\t\t\t\t\ttype='number'\n\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\tonChange={handleInputChange}\n\t\t\t\t\tonKeyPress={handleKeyPress}\n\t\t\t\t\tref={inputRef}\n\t\t\t\t\t{...inputConfig}\n\t\t\t\t/>\n\t\t\t\t<div className='stage-component__input-send-button' onClick={handleSend}>Send</div>\n\t\t\t</div>\n\t\t\t{!!errorText && <span className='stage-component__input-error'>{errorText}</span>}\n\t\t\t{!!customErrorText && <span className='stage-component__input-error'>{customErrorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default AmountInput;\n","import React from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst ConfirmInput = ({ params = {}, approveCallback }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { functionId, interfaceAddress, text } = params;\n\n\tconst handleConfirm = async value => {\n\t\ttry {\n\t\t\tif (approveCallback)\n\t\t\t\treturn approveCallback(value);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value });\n\t\t} catch(err) {\n\t\t\tconsole.error(err);\n\t\t}\n\t}\n\n\treturn (\n\t\t<div className='stage-component__confirm-input-container'>\n\t\t\t{!!text && <div className='stage-component__confirm-input-label'>{text}</div>}\n\t\t\t<div\n\t\t\t\tonClick={() => handleConfirm(true)}\n\t\t\t\tclassName='stage-component__confirm-input-button'\n\t\t\t>\n\t\t\t\tConfirm\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tonClick={() => handleConfirm(false)}\n\t\t\t\tclassName='stage-component__confirm-input-button stage-component__confirm-input-button--decline'\n\t\t\t>\n\t\t\t\tDecline\n\t\t\t</div>\n\t\t</div>\n\t)\n};\n\nexport default ConfirmInput;\n","import React, { useState } from 'react';\nimport { useDebotAddress, checkIsValidAddress, getEnvVariableFromInput } from 'src/helpers';\nimport { Input } from '../';\nimport { DEngine } from 'src/debot';\n\nconst AddressInput = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst { interfaceAddress, functionId } = params;\n\n\tconst handleSubmit = async inputValue => {\n\t\ttry {\n\t\t\tconst value = getEnvVariableFromInput(inputValue) || inputValue;\n\n\t\t\tconst isValidAddress = await checkIsValidAddress(value);\n\n\t\t\tif (!isValidAddress)\n\t\t\t\treturn setErrorText('Invalid address');\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\treturn <Input\n\t\tcustomCallback={handleSubmit}\n\t\tcustomErrorText={errorText}\n\t\tsetCustomErrorText={setErrorText}\n\t\tparams={params}\n\t/>\n};\n\nexport default AddressInput;\n","import React, { useState } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport { AmountInput } from '../';\n\nconst NANO_MODIFIER = 1000000000;\n\nconst convertToNanotokens = tokens => (parseFloat(tokens) * NANO_MODIFIER).toString();\n\nconst TokensInput = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst { functionId, interfaceAddress } = params;\n\n\tconst handleSubmit = async inputValue => {\n\t\ttry {\n\t\t\tconst nanotokens = convertToNanotokens(inputValue);\n\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, functionId, { value: nanotokens });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}\n\n\treturn (\n\t\t<AmountInput\n\t\t\tparams={params}\n\t\t\tcustomCallback={handleSubmit}\n\t\t\tcustomErrorText={errorText}\n\t\t\tsetCustomErrorText={setErrorText}\n\t\t/>\n\t)\n};\n\nexport default TokensInput;\n","import React, { useState, useLayoutEffect, useCallback } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\nimport './index.scss';\n\nconst MAX_ITEMS = 8;\n\nconst Menu = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst [errorText, setErrorText] = useState('');\n\tconst [menuItemsToRender, setMenuItemsToRender] = useState(false);\n\tconst [isShowAllMenuItems, setIsShowAllMenuItems] = useState(false);\n\tconst { text, title, interfaceAddress, menuItems } = params;\n\n\tconst handleSelectItem = useCallback(async (selectedItem, index) => {\n\t\ttry {\n\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress, selectedItem.functionId, { index });\n\t\t} catch(err) {\n\t\t\tsetErrorText(err.message);\n\t\t}\n\t}, [debotAddress, interfaceAddress]);\n\n\tuseLayoutEffect(() => {\n\t\tlet itemsToRender = menuItems.map((item, index) => {\n\t\t\tlet menuName = item.title;\n\t\n\t\t\tif (item.description)\n\t\t\t\tmenuName += ` (${item.description})`;\n\t\n\t\t\treturn (\n\t\t\t\t<div\n\t\t\t\t\tonClick={() => handleSelectItem(item, index)}\n\t\t\t\t\tkey={`${item.functionId}-${index}`}\n\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t>\n\t\t\t\t\t{menuName}\n\t\t\t\t</div>\n\t\t\t);\n\t\t});\n\n\t\tif (itemsToRender.length > MAX_ITEMS) {\n\t\t\tif (isShowAllMenuItems) {\n\t\t\t\titemsToRender.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => setIsShowAllMenuItems(false)}\n\t\t\t\t\t\tkey='hide-btn'\n\t\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t\t>\n\t\t\t\t\t\t{'Hide'}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t} else {\n\t\t\t\titemsToRender = itemsToRender.slice(0, MAX_ITEMS);\n\n\t\t\t\titemsToRender.push(\n\t\t\t\t\t<div\n\t\t\t\t\t\tonClick={() => setIsShowAllMenuItems(true)}\n\t\t\t\t\t\tkey='show-more-btn'\n\t\t\t\t\t\tclassName='stage-component__menu-item'\n\t\t\t\t\t>\n\t\t\t\t\t\t{'Show more'}\n\t\t\t\t\t</div>\n\t\t\t\t)\n\t\t\t}\n\t\t}\n\n\t\tsetMenuItemsToRender(itemsToRender);\n\t}, [menuItems, handleSelectItem, isShowAllMenuItems]);\n\n\treturn (\n\t\t<div className='stage-component__menu-container'>\n\t\t\t<div className='stage-component__menu-title'>{title}</div>\n\t\t\t<div className='stage-component__menu-description'>{text}</div>\n\t\t\t<div className='stage-component__menu-list'>\n\t\t\t\t{menuItemsToRender}\n\t\t\t</div>\n\t\t\t{errorText && <span className='stage-component__menu-error'>{errorText}</span>}\n\t\t</div>\n\t)\n};\n\nexport default Menu;\n","import React, { useEffect } from 'react';\nimport { useDebotAddress } from 'src/helpers';\nimport { DEngine } from 'src/debot';\n\nconst Stdout = ({ params }) => {\n\tconst debotAddress = useDebotAddress();\n\tconst { text, interfaceAddress } = params;\n\n\tuseEffect(() => {\n\t\tconst runDebotFunction = async () => {\n\t\t\ttry {\n\t\t\t\tawait DEngine.callDebotFunction(debotAddress, interfaceAddress);\n\t\t\t} catch(err) {\n\t\t\t\tconsole.error(err);\n\t\t\t}\n\t\t};\n\n\t\trunDebotFunction();\n\t// eslint-disable-next-line react-hooks/exhaustive-deps\n\t}, []);\n\n\treturn (\n\t\t<div className='stage-component__text'>\n\t\t\t{text}\n\t\t</div>\n\t)\n};\n\nexport default Stdout;\n","import React, { Component, createRef } from 'react';\nimport { connect } from 'react-redux';\nimport { COMPONENTS_BINDINGS } from 'src/constants';\nimport { isCustomScrollBar } from 'src/helpers';\nimport { Loader } from 'src/components';\nimport {\n\tText,\n\tStdout,\n\tInput,\n\tAddressInput,\n\tTextarea,\n\tAmountInput,\n\tConfirmInput,\n\tTokensInput,\n\tMenu,\n} from './StageComponents';\nimport './index.scss';\n\nclass Stage extends Component {\n\tstageRef = createRef(null);\n\n\tstageComponents = {\n\t\t[COMPONENTS_BINDINGS.INPUT]: Input,\n\t\t[COMPONENTS_BINDINGS.TEXTAREA]: Textarea,\n\t\t[COMPONENTS_BINDINGS.AMOUNT_INPUT]: AmountInput,\n\t\t[COMPONENTS_BINDINGS.CONFIRM_INPUT]: ConfirmInput,\n\t\t[COMPONENTS_BINDINGS.ADDRESS_INPUT]: AddressInput,\n\t\t[COMPONENTS_BINDINGS.TOKENS_INPUT]: TokensInput,\n\t\t[COMPONENTS_BINDINGS.TEXT]: Text,\n\t\t[COMPONENTS_BINDINGS.STDOUT]: Stdout,\n\t\t[COMPONENTS_BINDINGS.MENU]: Menu,\n\t}\n\n\tformStageComponents = () => {\n\t\tconst { stage } = this.props;\n\n\t\treturn stage.map((stageItem, index) => {\n\t\t\tconst Component = this.stageComponents[stageItem.component];\n\n\t\t\treturn <Component key={`${stageItem.functionId}-${index}`} params={stageItem} />\n\t\t});\n\t}\n\n\tcomponentDidUpdate(prevProps) {\n\t\tif (prevProps.stage.length !== this.props.stage.length) {\n\t\t\tif (this.stageRef?.current)\n\t\t\t\tsetTimeout(() => this.stageRef.current.scrollTop = this.stageRef.current.scrollHeight, 0);\n\t\t}\n\t}\n\n\trender() {\n\t\tconst { stage, isDebotError } = this.props;\n\n\t\tif (!stage.length) {\n\t\t\treturn <Loader isFailed={isDebotError} />\n\t\t}\n\n\t\tconst stageComponents = this.formStageComponents();\n\n\t\tconst stageClassName = `stage ${isCustomScrollBar() ? 'with-custom-scrollbar' : ''}`;\n\n\t\treturn (\n\t\t\t<div ref={this.stageRef} className={stageClassName}>\n\t\t\t\t<div className='stage__container'>\n\t\t\t\t\t{stageComponents}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t)\n\t}\n}\n\nconst mapStateToProps = ({ debot: { stage } }) => ({ stage });\n\nexport default connect(mapStateToProps)(Stage);\n","import React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from 'react-router-dom';\nimport { DEngine } from 'src/debot';\nimport { useDebotAddress, removeLocalDebot } from 'src/helpers';\nimport { clearStage } from 'src/store/actions/debot';\nimport { SigningBox, ApproveWindow, ControlWithPopup, AddDebot, Environment } from 'src/components';\nimport Stage from './Stage';\nimport './index.scss';\n\nconst DebotPage = () => {\n\tconst dispatch = useDispatch();\n\tconst debotAddress = useDebotAddress();\n\tconst [isDebotError, setIsDebotError] = useState(false);\n\tconst isSigningBoxVisible = useSelector(state => !!state.debot.signingBox);\n\tconst isApproveWindowVisible = useSelector(state => !!state.debot.approveWindow);\n\tconst isDebotSaved = useSelector(state => !!state.debot.localDebotsList.find(debot => debot.address === debotAddress));\n\n\tuseEffect(() => {\n\t\tconst asyncEffect = async () => {\n\t\t\tif (debotAddress) {\n\t\t\t\ttry {\n\t\t\t\t\tawait DEngine.runDebot(debotAddress);\n\t\t\t\t} catch (err) {\n\t\t\t\t\tsetIsDebotError(true);\n\t\t\t\t\tconsole.error('Error while running debot: ', err);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t\t\n\t\tasyncEffect();\n\n\t\treturn () => {\n\t\t\tdispatch(clearStage());\n\t\t}\n\t}, [debotAddress, dispatch]);\n\n\tif (!debotAddress)\n\t\treturn <Redirect to='/' />\n\n\tconst restartDebot = async () => {\n\t\ttry {\n\t\t\tawait DEngine.reloadDebot(debotAddress);\n\t\t} catch (err) {\n\t\t\tsetIsDebotError(true);\n\t\t\tconsole.error('Error while running debot: ', err);\n\t\t}\n\t}\n\n\tconst isScrollDisabled = isSigningBoxVisible || isApproveWindowVisible;\n\tconst pageClassName = `debot-page ${isScrollDisabled ? 'debot-page--scroll-disabled' : ''}`;\n\n\treturn (\n\t\t<div className={pageClassName}>\n\t\t\t<div className='debot-page__controls'>\n\t\t\t\t<div\n\t\t\t\t\tclassName='debot-page__controls-item'\n\t\t\t\t\tonClick={restartDebot}\n\t\t\t\t>\n\t\t\t\t\tRestart DeBot\n\t\t\t\t</div>\n\t\t\t\t{isDebotSaved\n\t\t\t\t\t? <div\n\t\t\t\t\t\tclassName='debot-page__controls-item'\n\t\t\t\t\t\tonClick={() => removeLocalDebot(debotAddress)}\n\t\t\t\t\t>\n\t\t\t\t\t\tRemove from Saved\n\t\t\t\t\t</div>\n\t\t\t\t\t: <ControlWithPopup height={310} width={500} name='Save DeBot'>\n\t\t\t\t\t\t<AddDebot prefilledAddress={debotAddress} />\n\t\t\t\t\t</ControlWithPopup>\n\t\t\t\t}\n\t\t\t\t<ControlWithPopup height={472} width={650} name='Show Environment'>\n\t\t\t\t\t<Environment />\n\t\t\t\t</ControlWithPopup>\n\t\t\t</div>\n\t\t\t<Stage isDebotError={isDebotError} />\n\t\t\t{isSigningBoxVisible && <SigningBox />}\n\t\t\t{isApproveWindowVisible && <ApproveWindow />}\n\t\t</div>\n\t)\n}\n\nexport default DebotPage;\n","import React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { genKeyPairFromMnemonic } from 'src/helpers';\nimport './index.scss';\n\nconst SigningBox = () => {\n\tconst [inputValue, setInputValue] = useState('');\n\tconst [errorText, setErrorText] = useState('');\n\tconst [isDropable, setIsDropable] = useState(false);\n\tconst [isUploadError, setIsUploadError] = useState(false);\n\tconst signingBox = useSelector(state => state.debot.signingBox);\n\n\tconst handleChangeInput = e => {\n\t\tsetInputValue(e.target.value);\n\t\tsetErrorText('');\n\t};\n\n\tconst submitInput = async event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldSubmit = isEnter && !shiftKey && !altKey && inputValue;\n\n\t\tif (!shouldSubmit)\n\t\t\treturn;\n\n\t\ttry {\n\t\t\tconst keyPair = await genKeyPairFromMnemonic(inputValue);\n\n\t\t\tsigningBox.submit(keyPair);\n\t\t} catch(err) {\n\t\t\tconsole.error('Error when getting keys from mnemonic: ', err);\n\t\t\tsetErrorText('Error when getting keys from secret phrase');\n\t\t}\n\t}\n\n\tconst preventEvent = e => {\n\t\te.preventDefault();\n\t\te.stopPropagation();\n\t};\n\n\tconst handleDragEnter = e => {\n\t\tpreventEvent(e);\n\t\tsetIsDropable(true);\n\t};\n\n\tconst handleDragLeave = e => {\n\t\tpreventEvent(e)\n\t\tsetIsDropable(false);\n\t};\n\n\tconst handleDrop = e => {\n\t\tpreventEvent(e);\n\t\tsetIsDropable(false);\n\t\tsetIsUploadError(false);\n\t\tconst { files } = e.dataTransfer;\n\n\t\tif (files && files.length > 1)\n\t\t\treturn setIsUploadError(true);\n\n\t\tconst reader = new FileReader();\n\n\t\treader.onabort = () => setIsUploadError(true);\n\n\t\treader.onerror = () => setIsUploadError(true);\n\n\t\treader.onload = e => {\n\t\t\ttry {\n\t\t\t\tconst { result } = e.target;\n\t\n\t\t\t\tconst keyPair = JSON.parse(result);\n\n\t\t\t\tsigningBox.submit(keyPair);\n\t\t\t\tsetIsUploadError(false);\n\t\t\t} catch(err) {\n\t\t\t\tsetIsUploadError(true);\n\t\t\t}\n\t\t};\n\n\t\treader.readAsText(files[0]);\n\t};\n\n\treturn (\n\t\t<div className='signing-box'>\n\t\t\t<div className='signing-box__container'>\n\t\t\t\t<div className='signing-box__header'>\n\t\t\t\t\tSigning Box\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__description'>\n\t\t\t\t\tWe <b>DON'T</b> store your keys or seed phrase.\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__input-container'>\n\t\t\t\t\t<div className='signing-box__input-label'>Enter seed phrase:</div>\n\t\t\t\t\t<textarea\n\t\t\t\t\t\tclassName={`signing-box__input ${errorText ? 'signing-box__input--error' : ''}`}\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tvalue={inputValue}\n\t\t\t\t\t\tonChange={handleChangeInput}\n\t\t\t\t\t\tonKeyPress={submitInput}\n\t\t\t\t\t></textarea>\n\t\t\t\t\t{errorText && <span className='signing-box__input-error'>{errorText}</span>}\n\t\t\t\t</div>\n\t\t\t\t<div className='signing-box__devider'>\n\t\t\t\t\tOR\n\t\t\t\t</div>\n\t\t\t\t<div\n\t\t\t\t\tclassName={`signing-box__upload-keys ${isDropable ? 'signing-box__upload-keys--dropable' : ''}`}\n\t\t\t\t\tonDragEnter={handleDragEnter}\n\t\t\t\t\tonDrop={handleDrop}\n\t\t\t\t\tonDragOver={preventEvent}\n\t\t\t\t>\n\t\t\t\t\t<input type=\"file\" id=\"upload-input\" hidden />\n\t\t\t\t\t<label htmlFor=\"upload-input\">\n\t\t\t\t\t\t<img\n\t\t\t\t\t\t\tsrc='/uploadKeys.jpg'\n\t\t\t\t\t\t\talt='Click here to upload'\n\t\t\t\t\t\t/>\n\t\t\t\t\t\tUpload keypair file\n\t\t\t\t\t</label>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName={`signing-box__upload-keys-dropable-overlay ${isDropable ? 'signing-box__upload-keys-dropable-overlay--active' : ''}`}\n\t\t\t\t\t\tonDragLeave={handleDragLeave}\n\t\t\t\t\t></div>\n\t\t\t\t\t{isUploadError && <span className='signing-box__upload-keys--error'>Not recognized</span>}\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default SigningBox;\n","import React from 'react';\nimport { useSelector } from 'react-redux';\nimport { ConfirmInput } from 'src/components/DebotPage/Stage/StageComponents';\nimport { createExplorerUrl } from 'src/helpers';\nimport './index.scss';\n\nconst convertFromNano = value => value / 1000000000;\n\nconst ApproveWindow = () => {\n\tconst approveWindow = useSelector(state => state.debot.approveWindow);\n\n\tconst handleApprove = isApproved => approveWindow.submit(isApproved);\n\n\tconst { dst, fee, out, setcode, signkey } = approveWindow.params;\n\tconst hasOutgoingTransfers = !!out.length;\n\n\treturn (\n\t\t<div className='approve-window'>\n\t\t\t<div className='approve-window__container'>\n\t\t\t\t<div className='approve-window__header'>\n\t\t\t\t\tPermission Request \n\t\t\t\t</div>\n\t\t\t\t<div className='approve-window__description'>\n\t\t\t\t\tDeBot is going to create an onchain transaction:\n\t\t\t\t</div>\n\t\t\t\t<div className='approve-window__details'>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tAccount:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t<a href={createExplorerUrl(dst)} target=\"_blank\" rel=\"noreferrer\">{dst}</a>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tTransaction fees:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t{convertFromNano(fee)} tokens\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='approve-window__details-row'>\n\t\t\t\t\t\t<div className='approve-window__details-col approve-window__details-col--title'>\n\t\t\t\t\t\t\tMessage signer public key:\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='approve-window__details-col'>\n\t\t\t\t\t\t\t{signkey}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t\t{hasOutgoingTransfers\n\t\t\t\t\t? <div className='approve-window__details-description'>\n\t\t\t\t\t\tOutgoing transfers from account:\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div className='approve-window__details-description'>\n\t\t\t\t\t\tNo outgoing transfers.\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{hasOutgoingTransfers\n\t\t\t\t\t&& <div className='approve-window__transfers'>\n\t\t\t\t\t\t<div className='approve-window__transfers-row'>\n\t\t\t\t\t\t\t<div className='approve-window__transfers-col approve-window__transfers-col--title'>\n\t\t\t\t\t\t\t\tRecipient\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='approve-window__transfers-col approve-window__transfers-col--title'>\n\t\t\t\t\t\t\t\tAmount\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{out.map((spending, index) => {\n\t\t\t\t\t\t\tconst recipient = spending.recipient || spending.dst;\n\n\t\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t\t<div key={`${recipient}-${index}`} className='approve-window__transfers-row'>\n\t\t\t\t\t\t\t\t\t<div className='approve-window__transfers-col'>\n\t\t\t\t\t\t\t\t\t\t<a href={createExplorerUrl(recipient)} target=\"_blank\" rel=\"noreferrer\">{recipient}</a>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='approve-window__transfers-col'>\n\t\t\t\t\t\t\t\t\t\t{convertFromNano(spending.amount)} tokens\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t)\n\t\t\t\t\t\t})}\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t{!!setcode\n\t\t\t\t\t&& <div className='approve-window__details-description approve-window__details-description--warning'>\n\t\t\t\t\t\tWarning: the transaction will change the account smart contract code!\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t\t<div className='approve-window__confirm'>\n\t\t\t\t\t<ConfirmInput approveCallback={handleApprove} />\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ApproveWindow;\n","import React from 'react';\n\nconst ControlWithPopupContext = React.createContext(null);\n\nexport default ControlWithPopupContext;\n","import React, { useState, useContext, useEffect, useCallback } from 'react';\nimport tonClientController from 'src/tonClient';\nimport { addLocalDebot } from 'src/helpers';\nimport { ControlWithPopupContext } from 'src/contexts';\nimport { OptionsList } from 'src/components';\nimport { MainNetIcon, DevNetIcon } from 'src/components/icons';\nimport { MAIN_NETWORK, DEV_NETWORK } from 'src/constants';\nimport './index.scss';\n\nconst AddDebot = ({ prefilledAddress = '' }) => {\n\tconst popupContext = useContext(ControlWithPopupContext);\n\tconst [debotName, setDebotName] = useState('');\n\tconst [debotAddress, setDebotAddress] = useState(prefilledAddress);\n\tconst [selectedNetwork, setSelectedNetwork] = useState(tonClientController.selectedNetwork);\n\n\tconst handleAddressChange = e => setDebotAddress(e.target.value);\n\n\tconst handleLabelChange = e => setDebotName(e.target.value);\n\n\tconst handleAddDebot = useCallback(() => {\n\t\tif (debotName && debotAddress) {\n\t\t\tconst debotObj = {\n\t\t\t\ttitle: debotName,\n\t\t\t\taddress: debotAddress,\n\t\t\t\tnetwork: selectedNetwork,\n\t\t\t}\n\n\t\t\taddLocalDebot(debotObj);\n\n\t\t\tif (popupContext)\n\t\t\t\tpopupContext.closePopup();\n\t\t}\n\t}, [debotAddress, debotName, popupContext, selectedNetwork]);\n\n\tconst handlePressOnEnter = useCallback(event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldHandle = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldHandle)\n\t\t\thandleAddDebot();\n\t}, [handleAddDebot]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keypress', handlePressOnEnter);\n\n\t\treturn () => document.removeEventListener('keypress', handlePressOnEnter)\n\t}, [handlePressOnEnter]);\n\n\tconst renderSelectedItem = () => (\n\t\t<div className='options-list__selected-item'>\n\t\t\t{selectedNetwork === DEV_NETWORK ? <DevNetIcon /> : <MainNetIcon />}\n\t\t\t{selectedNetwork}\n\t\t</div>\n\t)\n\n\treturn (\n\t\t<div className='add-debot'>\n\t\t\t<div className='add-debot__horizontal-inputs'>\n\t\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t\t<span className='stage-component__input-label'>DeBot name</span>\n\t\t\t\t\t<input\n\t\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\t\ttype='text'\n\t\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\t\tvalue={debotName}\n\t\t\t\t\t\tonChange={handleLabelChange}\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t\t<OptionsList selectedItem={renderSelectedItem()} height={84} width={200}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => setSelectedNetwork(MAIN_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<MainNetIcon />\n\t\t\t\t\t\t{MAIN_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName='options-list__list-item'\n\t\t\t\t\t\tonClick={() => setSelectedNetwork(DEV_NETWORK)}\n\t\t\t\t\t>\n\t\t\t\t\t\t<DevNetIcon />\n\t\t\t\t\t\t{DEV_NETWORK}\n\t\t\t\t\t</div>\n\t\t\t\t</OptionsList>\n\t\t\t</div>\n\t\t\t<div className='stage-component__input-container'>\n\t\t\t\t<span className='stage-component__input-label'>DeBot address</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Enter...'\n\t\t\t\t\tvalue={debotAddress}\n\t\t\t\t\tonChange={handleAddressChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div onClick={handleAddDebot} className='add-debot__submit-button'>Add to list</div>\n\t\t</div>\n\t);\n}\n\nexport default AddDebot;\n","import React, { useState, useEffect, useCallback } from 'react';\nimport { useSelector } from 'react-redux';\nimport { addEnvVariable, removeEnvVariable, isCustomScrollBar } from 'src/helpers';\nimport { CancelIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst Environment = () => {\n\tconst envVariables = useSelector(state => state.environment.variables);\n\tconst envEntries = Object.entries(envVariables);\n\tconst [envKey, setEnvKey] = useState('');\n\tconst [envValue, setEnvValue] = useState('');\n\tconst [isCopiedVisible, setIsCopiedVisible] = useState(false);\n\n\tconst handleKeyChange = e => setEnvKey(e.target.value);\n\n\tconst handleValueChange = e => setEnvValue(e.target.value);\n\n\tconst handleAddVariable = useCallback(() => {\n\t\tif (envKey && envValue) {\n\t\t\taddEnvVariable(envKey, envValue);\n\t\t\tsetEnvKey('');\n\t\t\tsetEnvValue('');\n\t\t}\n\t}, [envKey, envValue]);\n\n\tconst handleRemoveVariable = (e, key) => {\n\t\te.stopPropagation();\n\t\t\n\t\tremoveEnvVariable(key);\n\t}\n\n\tconst handlePressOnEnter = useCallback(event => {\n\t\tconst { shiftKey, key, altKey } = event;\n\t\tconst isEnter = key === 'Enter';\n\t\tconst shouldHandle = isEnter && !shiftKey && !altKey;\n\n\t\tif (shouldHandle)\n\t\t\thandleAddVariable();\n\t}, [handleAddVariable]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('keypress', handlePressOnEnter);\n\n\t\treturn () => document.removeEventListener('keypress', handlePressOnEnter)\n\t}, [handlePressOnEnter]);\n\n\tconst copyToClipboard = async value => {\n\t\ttry {\n\t\t\tawait navigator.clipboard.writeText(value);\n\n\t\t\tsetIsCopiedVisible(true);\n\n\t\t\tsetTimeout(() => setIsCopiedVisible(false), 2000);\n\t\t} catch(err) {\n\t\t\tconsole.error('Clipboard API not supported');\n\t\t}\n\t}\n\n\tconst renderVariablesTableItems = () => envEntries.map(([key, value]) => (\n\t\t<div key={key} className='environment__table-row'>\n\t\t\t<div className='environment__table-col environment__table-col--cancel'>\n\t\t\t\t<CancelIcon onClick={e => handleRemoveVariable(e, key)}/>\n\t\t\t</div>\n\t\t\t<div className='environment__table-col environment__table-col--title'>{key}</div>\n\t\t\t<div className='environment__table-col environment__table-col--clickable' onClick={() => copyToClipboard(value)}>{value}</div>\n\t\t</div>\n\t));\n\n\tconst copiedIndicatorClassName = `environment__copied-indicator ${isCopiedVisible ? 'environment__copied-indicator--visible' : ''}`;\n\n\treturn (\n\t\t<div className='environment'>\n\t\t\t<div className={`environment__table--wrapper ${isCustomScrollBar() ? 'with-custom-scrollbar' : ''}`}>\n\t\t\t\t{envEntries.length\n\t\t\t\t\t? <div className='environment__table'>\n\t\t\t\t\t\t{renderVariablesTableItems()}\n\t\t\t\t\t</div>\n\t\t\t\t\t: <div className='environment__image'>\n\t\t\t\t\t\t<div className='environment__image-text'>\n\t\t\t\t\t\t\tHere you can store something to use later (address or public key, for example).\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='environment__image--flex-container'>\n\t\t\t\t\t\t\t<img src='/env-icon.svg' alt='Environment'/>\n\t\t\t\t\t\t\t<div className='environment__image-text'>\n\t\t\t\t\t\t\t\tYou can access stored data as variables in inputs by adding the '$' prefix to key, or copy data to the clipboard by click on it.\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='environment__image-text environment__image-text--warning'>\n\t\t\t\t\t\t\tThis storage is not encrypted, so you should not store private keys or seed-phrase here.\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t}\n\t\t\t</div>\n\t\t\t<div className='environment__input-container'>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Key'\n\t\t\t\t\tvalue={envKey}\n\t\t\t\t\tonChange={handleKeyChange}\n\t\t\t\t/>\n\t\t\t\t<span className='environment__divider'>:</span>\n\t\t\t\t<input\n\t\t\t\t\tclassName='stage-component__input'\n\t\t\t\t\ttype='text'\n\t\t\t\t\tplaceholder='Value'\n\t\t\t\t\tvalue={envValue}\n\t\t\t\t\tonChange={handleValueChange}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className='environment__footer'>\n\t\t\t\t<div className={copiedIndicatorClassName}>Copied to clipboard!</div>\n\t\t\t\t<div onClick={handleAddVariable} className='environment__submit-button'>Add variable</div>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default Environment;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ControlWithPopupContext } from 'src/contexts';\nimport './index.scss';\n\nconst DEFAULT_WIDTH = 460;\nconst DEFAULT_HEIGHT = 252;\n\nconst ControlWithPopup = ({ children, name, height = DEFAULT_HEIGHT, width = DEFAULT_WIDTH }) => {\n\tconst containerRef = useRef(null);\n\tconst [isControlOpen, setIsControlOpen] = useState(false);\n\n\tconst closePopup = () => setIsControlOpen(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tconst shouldHandleClick = isControlOpen\n\t\t\t&& containerRef?.current\n\t\t\t&& !containerRef.current.contains(event.target);\n\n\t\tif (shouldHandleClick)\n\t\t\tclosePopup();\n\t}, [isControlOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst containerClassName = `control-with-popup__container ${isControlOpen\n\t\t? 'control-with-popup__container--visible' : ''\n\t}`;\n\n\tconst switcherBlockClassName = `control-with-popup ${isControlOpen\n\t\t? 'control-with-popup--active' : ''\n\t}`;\n\n\tconst containerStyles = {\n\t\t'--height': `${height}px`,\n\t\t'--width': `${width}px`,\n\t};\n\n\treturn (\n\t\t<div\n\t\t\tref={containerRef}\n\t\t\tclassName={switcherBlockClassName}\n\t\t>\n\t\t\t<div\n\t\t\t\tonClick={() => setIsControlOpen(!isControlOpen)}\n\t\t\t\tclassName='control-with-popup__label'\n\t\t\t>\n\t\t\t\t{name}\n\t\t\t</div>\n\t\t\t<div\n\t\t\t\tclassName={containerClassName}\n\t\t\t\tstyle={containerStyles}\n\t\t\t>\n\t\t\t\t<ControlWithPopupContext.Provider value={{ closePopup }}>\n\t\t\t\t\t{isControlOpen && children}\n\t\t\t\t</ControlWithPopupContext.Provider>\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default ControlWithPopup;\n","import React, { useState, useRef, useEffect, useCallback } from 'react';\nimport { ArrowIcon } from 'src/components/icons';\nimport './index.scss';\n\nconst DEFAULT_HEIGHT = 252;\nconst DEFAULT_WIDTH = 245;\n\nconst OptionsList = ({ children, selectedItem, height = DEFAULT_HEIGHT, width = DEFAULT_WIDTH }) => {\n\tconst switcherBlockRef = useRef(null);\n\tconst [isListOpen, setIsListOpen] = useState(false);\n\n\tconst handleClickOutside = useCallback(event => {\n\t\tif (!switcherBlockRef?.current?.contains(event.target) && isListOpen)\n\t\t\tsetIsListOpen(false);\n\t}, [isListOpen]);\n\n\tuseEffect(() => {\n\t\tdocument.addEventListener('click', handleClickOutside);\n\n\t\treturn () => {\n\t\t\tdocument.removeEventListener('click', handleClickOutside);\n\t\t}\n\t}, [handleClickOutside]);\n\n\tconst listClassName = `options-list__list ${isListOpen\n\t\t? 'options-list__list--visible' : ''\n\t}`;\n\n\tconst switcherBlockClassName = `options-list ${isListOpen\n\t\t? 'options-list--active' : ''\n\t}`;\n\n\treturn (\n\t\t<div\n\t\t\tref={switcherBlockRef}\n\t\t\tonClick={() => setIsListOpen(!isListOpen)}\n\t\t\tclassName={switcherBlockClassName}\n\t\t\tstyle={{ '--width': `${width}px` }}\n\t\t>\n\t\t\t{selectedItem}\n\t\t\t<ArrowIcon />\n\t\t\t<div\n\t\t\t\tclassName={listClassName}\n\t\t\t\tstyle={{ '--height': `${height}px` }}\n\t\t\t>\n\t\t\t\t{children}\n\t\t\t</div>\n\t\t</div>\n\t);\n}\n\nexport default OptionsList;\n","import React from 'react';\nimport './index.scss';\n\nconst Loader = ({ isFailed }) => {\n\tconst imgSrc = isFailed ? '/load-failed.png' : '/loader.gif';\n\tconst imgAlt = isFailed ? 'Nothing here :(' : 'Loading...';\n\n\treturn (\n\t\t<div className='loader'>\n\t\t\t<img className='loader__cat' src={imgSrc} alt={imgAlt} />\n\t\t</div>\n\t);\n}\n\nexport default Loader;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux'\nimport { BrowserRouter } from 'react-router-dom';\nimport store from 'src/store'\nimport { App } from 'src/components';\nimport { isCustomScrollBar } from 'src/helpers';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\n\nimport 'src/styles/index.scss';\n\nrequire('dotenv').config();\n\nif (isCustomScrollBar()) {\n\tdocument.querySelector('body')?.classList.add('with-custom-scrollbar');\n}\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\tdocument.getElementById('root'),\n);\n\nserviceWorkerRegistration.register();\n"],"sourceRoot":""}